<?php
/*
 本代码由 成都大猿人网络科技有限公司 原创开发
 官方网址：www.dayuanren.cn
 严禁反编译、逆向等任何形式的侵权行为，违者将追究法律责任
*/
namespace app\admin\controller;
use app\common\library\Createlog;
use app\common\library\Templetmsg;
use app\common\model\Balance;
use app\common\model\Porder as PorderModel;
use app\common\model\Product as ProductModel;
class Porder extends Admin {
	public function _init() {
		$Kh9MC=!IS_CLI;
		$Kh9MG=(bool)$Kh9MC;
		if($Kh9MG)goto Kh9eWjgx5;
		goto Kh9ldMhx5;
		Kh9eWjgx5:$Kh9MD=!function_exists('get_shoquan_key');
		$Kh9MF=(bool)$Kh9MD;
		$Kh9MH=!$Kh9MF;
		if($Kh9MH)goto Kh9eWjgx3;
		goto Kh9ldMhx3;
		Kh9eWjgx3:$Kh9ME=!S(md5(get_shoquan_key()));
		$Kh9MF=$Kh9MD||$Kh9ME;
		goto Kh9x2;
		Kh9ldMhx3:Kh9x2:$Kh9MG=$Kh9MC&&$Kh9MF;
		goto Kh9x4;
		Kh9ldMhx5:Kh9x4:if($Kh9MG)goto Kh9eWjgx6;
		goto Kh9ldMhx6;
		Kh9eWjgx6:echo C('sqyc_msg');
		exit();
		goto Kh9x1;
		Kh9ldMhx6:Kh9x1:
	}
	public function index() {
		unset($Kh9tIMC);
		$Kh9tIMC=$this->create_map();
		$map=$Kh9tIMC;
		if(I('sort'))goto Kh9eWjgx8;
		goto Kh9ldMhx8;
		Kh9eWjgx8:unset($Kh9tIMC);
		$Kh9tIMC=I('sort');
		$sort=$Kh9tIMC;
		goto Kh9x7;
		Kh9ldMhx8:unset($Kh9tIMC);
		$Kh9tIMC="id desc";
		$sort=$Kh9tIMC;
		Kh9x7:unset($Kh9tIMC);
		$Kh9tIMC=M('porder')->where($map)->field("*,(select username from dyr_customer where id=customer_id) as username,(select type_name from dyr_product_type where id=type) as type_name")->order($sort)->paginate(C('LIST_ROWS'));
		$list=$Kh9tIMC;
		$this->assign('total_price',M('porder')->where($map)->sum("total_price"));
		$this->assign('sus_total_price',M('porder')->where($map)->where(array('status'=>array('in',array(4))))->sum("total_price"));
		$this->assign('sus_cost',M('porder')->where($map)->where(array('status'=>array('in',array(4))))->sum("cost"));
		$Kh9vPMC=M('porder')->where($map)->where(array('is_rebate'=>1,'status'=>array('in',array(4))))->sum("rebate_price")+M('porder')->where($map)->where(array('is_rebate'=>1,'status'=>array('in',array(4))))->sum("rebate_price2");
		$this->assign('rebate_price',$Kh9vPMC);
		$this->assign('apsus_total_price',M('porder')->where($map)->where(array('status'=>array('in',array(12,13))))->sum("total_price-refund_price"));
		$this->assign('apsus_cost',M('porder')->where($map)->where(array('status'=>array('in',array(12,13))))->sum("cost*(1-refund_price/total_price)"));
		$Kh9vPMC=M('porder')->where($map)->where(array('is_rebate'=>1,'status'=>array('in',array(12,13))))->sum("rebate_price")+M('porder')->where($map)->where(array('is_rebate'=>1,'status'=>array('in',array(12,13))))->sum("rebate_price2");
		$this->assign('aprebate_price',$Kh9vPMC);
		$this->assign('reapi',M('reapi')->where(array('is_del'=>0))->order('sort asc,id asc')->select());
		$this->assign('_list',$list);
		$this->assign('_total',$list->total());
		$this->assign('_types',M('product_type')->where(array('status'=>1))->order('sort asc,id asc')->select());
		return view();
	}
	public function batch_api() {
		unset($Kh9tIMC);
		$Kh9tIMC=$this->create_map();
		$map=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=M('porder')->where($map)->field("id")->select();
		$list=$Kh9tIMC;
		$Kh9MC=count($list)==0;
		if($Kh9MC)goto Kh9eWjgxa;
		goto Kh9ldMhxa;
		Kh9eWjgxa:return $this->error('没有筛选到订单');
		goto Kh9x9;
		Kh9ldMhxa:Kh9x9:unset($Kh9tIMC);
		$Kh9tIMC=array_column($list,'id');
		$ids=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=M('porder')->where(array('id'=>array('in',$ids),'status'=>array('in','2,10')))->field("id")->select();
		$list=$Kh9tIMC;
		$Kh9MC=count($list)==0;
		if($Kh9MC)goto Kh9eWjgxc;
		goto Kh9ldMhxc;
		Kh9eWjgxc:return $this->error('没有筛选到订单（系统会自动过滤非待充值、压单状态的订单）');
		goto Kh9xb;
		Kh9ldMhxc:Kh9xb:unset($Kh9tIMC);
		$Kh9tIMC=array_column($list,'id');
		$ids=$Kh9tIMC;
		$this->assign('_total',count($ids));
		$this->assign('_ids',implode(',',$ids));
		$this->assign('reapi',M('reapi')->where(array('is_del'=>0))->order('id desc')->select());
		unset($Kh9tIMC);
		$Kh9tIMC=M('porder')->where(array('id'=>array('in',$ids)))->group('product_name')->field('product_name')->select();
		$miangroup=$Kh9tIMC;
		$Kh9vPMC=count($miangroup)==1;
		if($Kh9vPMC)goto Kh9eWjgxe;
		goto Kh9ldMhxe;
		Kh9eWjgxe:$Kh9vPMD=1;
		goto Kh9xd;
		Kh9ldMhxe:$Kh9vPMD=0;
		Kh9xd:$this->assign('is_same',$Kh9vPMD);
		foreach($miangroup as&$v) {
			unset($Kh9tIMC);
			$Kh9tIMC=floatval(preg_replace('/\\D/','',$v['product_name']));
			$v['mianzhi']=$Kh9tIMC;
			$this->assign('mianzhi',$v['mianzhi']);
		}
		$this->assign('miangroup',$miangroup);
		return view();
	}
	public function batchs_api() {
		unset($Kh9tIMC);
		$Kh9tIMC=$this->create_map();
		$map=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=M('porder')->where($map)->field("id")->select();
		$list=$Kh9tIMC;
		$Kh9MC=count($list)==0;
		if($Kh9MC)goto Kh9eWjgxg;
		goto Kh9ldMhxg;
		Kh9eWjgxg:return $this->error('没有筛选到订单');
		goto Kh9xf;
		Kh9ldMhxg:Kh9xf:unset($Kh9tIMC);
		$Kh9tIMC=array_column($list,'id');
		$ids=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=M('porder')->where(array('id'=>array('in',$ids),'status'=>array('in','2,10')))->field("id,api_cur_param_id")->select();
		$list=$Kh9tIMC;
		$Kh9MC=count($list)==0;
		if($Kh9MC)goto Kh9eWjgxi;
		goto Kh9ldMhxi;
		Kh9eWjgxi:return $this->error('没有筛选到订单（系统会自动过滤非待充值、压单状态的订单）');
		goto Kh9xh;
		Kh9ldMhxi:Kh9xh:unset($Kh9tIMC);
		$Kh9tIMC=array_column($list,'id');
		$ids=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=array_column($list,'api_cur_param_id');
		$reapi_param_ids=$Kh9tIMC;
		$this->assign('_total',count($ids));
		$this->assign('_ids',implode(',',$ids));
		$this->assign('reapi_param_id',implode(',',$reapi_param_id));
		$this->assign('miangroup',$miangroup);
		return view();
	}
	public function batch_api_do() {
		unset($Kh9tIMC);
		$Kh9tIMC=I('ids');
		$ids_y=$Kh9tIMC;
		$Kh9MC=$ids_y=='';
		if($Kh9MC)goto Kh9eWjgxk;
		goto Kh9ldMhxk;
		Kh9eWjgxk:return $this->error('没有选择订单');
		goto Kh9xj;
		Kh9ldMhxk:Kh9xj:unset($Kh9tIMC);
		$Kh9tIMC=M('porder')->where(array('id'=>array('in',$ids_y),'tlocking'=>0))->field('id')->select();
		$porders=$Kh9tIMC;
		$Kh9MC=!$porders;
		if($Kh9MC)goto Kh9eWjgxm;
		goto Kh9ldMhxm;
		Kh9eWjgxm:return $this->error('没有满足提交条件的订单');
		goto Kh9xl;
		Kh9ldMhxm:Kh9xl:unset($Kh9tIMC);
		$Kh9tIMC=array_column($porders,'id');
		$ids=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=I('reapi_param_id/a');
		$param_ids=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=I('num/a');
		$num=$Kh9tIMC;
		$Kh9MC=!$param_ids;
		$Kh9ME=(bool)$Kh9MC;
		$Kh9MF=!$Kh9ME;
		if($Kh9MF)goto Kh9eWjgxp;
		goto Kh9ldMhxp;
		Kh9eWjgxp:$Kh9MD=count($param_ids)==0;
		$Kh9ME=$Kh9MC||$Kh9MD;
		goto Kh9xo;
		Kh9ldMhxp:Kh9xo:if($Kh9ME)goto Kh9eWjgxq;
		goto Kh9ldMhxq;
		Kh9eWjgxq:return $this->error('没有选择api');
		goto Kh9xn;
		Kh9ldMhxq:Kh9xn:unset($Kh9tIMC);
		$Kh9tIMC=array();
		$apiparam=$Kh9tIMC;
		foreach($param_ids as $k=>$v) {
			unset($Kh9tIMC);
			$Kh9tIMC=array('param_id'=>$v,'num'=>$num[$k]);
			$apiparam[]=$Kh9tIMC;
		}
		$Kh9vPMC='find_in_set(param_id,"' . implode(',',$param_ids);
		$Kh9vPMD=$Kh9vPMC . '")';
		unset($Kh9tIME);
		$Kh9tIME=M('reapi_param rp')->join('reapi r','r.id=rp.reapi_id')->where(array('rp.id'=>array('in',$param_ids)))->field('rp.reapi_id,rp.id as param_id,1 as num')->orderRaw($Kh9vPMD)->select();
		$api_arr=$Kh9tIME;
		$Kh9MC=!$api_arr;
		if($Kh9MC)goto Kh9eWjgxs;
		goto Kh9ldMhxs;
		Kh9eWjgxs:return $this->error('未找到对应的api');
		goto Kh9xr;
		Kh9ldMhxs:Kh9xr:M('porder')->where(array('id'=>array('in',$ids)))->setField(array('tlocking'=>3));
		queue('app\\queue\\job\\Work@pordersSubApi',array('ids'=>$ids,'apiparam'=>$apiparam,'op'=>$this->adminuser['nickname']));
		return $this->success('推送任务提交成功','back');
	}
	public function batch_api_dos() {
		unset($Kh9tIMC);
		$Kh9tIMC=I('ids');
		$ids_y=$Kh9tIMC;
		$Kh9MC=$ids_y=='';
		if($Kh9MC)goto Kh9eWjgxu;
		goto Kh9ldMhxu;
		Kh9eWjgxu:return $this->error('没有选择订单');
		goto Kh9xt;
		Kh9ldMhxu:Kh9xt:unset($Kh9tIMC);
		$Kh9tIMC=M('porder')->where(array('id'=>array('in',$ids_y),'tlocking'=>0))->field('id')->select();
		$porders=$Kh9tIMC;
		$Kh9MC=!$porders;
		if($Kh9MC)goto Kh9eWjgxw;
		goto Kh9ldMhxw;
		Kh9eWjgxw:return $this->error('没有满足提交条件的订单');
		goto Kh9xv;
		Kh9ldMhxw:Kh9xv:unset($Kh9tIMC);
		$Kh9tIMC=array_column($porders,'id');
		$ids=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=I('reapi_param_id/a');
		$param_ids=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=I('num/a');
		$num=$Kh9tIMC;
		$Kh9MC=!$param_ids;
		$Kh9ME=(bool)$Kh9MC;
		$Kh9MF=!$Kh9ME;
		if($Kh9MF)goto Kh9eWjgxz;
		goto Kh9ldMhxz;
		Kh9eWjgxz:$Kh9MD=count($param_ids)==0;
		$Kh9ME=$Kh9MC||$Kh9MD;
		goto Kh9xy;
		Kh9ldMhxz:Kh9xy:if($Kh9ME)goto Kh9eWjgx11;
		goto Kh9ldMhx11;
		Kh9eWjgx11:return $this->error('没有选择api');
		goto Kh9xx;
		Kh9ldMhx11:Kh9xx:unset($Kh9tIMC);
		$Kh9tIMC=array();
		$apiparam=$Kh9tIMC;
		foreach($param_ids as $k=>$v) {
			unset($Kh9tIMC);
			$Kh9tIMC=array('param_id'=>$v,'num'=>$num[$k]);
			$apiparam[]=$Kh9tIMC;
		}
		$Kh9vPMC='find_in_set(param_id,"' . implode(',',$param_ids);
		$Kh9vPMD=$Kh9vPMC . '")';
		unset($Kh9tIME);
		$Kh9tIME=M('reapi_param rp')->join('reapi r','r.id=rp.reapi_id')->where(array('rp.id'=>array('in',$param_ids)))->field('rp.reapi_id,rp.id as param_id,1 as num')->orderRaw($Kh9vPMD)->select();
		$api_arr=$Kh9tIME;
		$Kh9MC=!$api_arr;
		if($Kh9MC)goto Kh9eWjgx13;
		goto Kh9ldMhx13;
		Kh9eWjgx13:return $this->error('未找到对应的api');
		goto Kh9x12;
		Kh9ldMhx13:Kh9x12:M('porder')->where(array('id'=>array('in',$ids)))->setField(array('tlocking'=>3));
		queue('app\\queue\\job\\Work@porderssSubApi',array('ids'=>$ids,'apiparam'=>$apiparam,'op'=>$this->adminuser['nickname']));
		return $this->success('推送任务提交成功');
	}
	public function batch_api_dop() {
		unset($Kh9tIMC);
		$Kh9tIMC=I('id/a');
		$ids_y=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=M('porder')->where(array('id'=>array('in',$ids_y),'tlocking'=>0))->field('id')->select();
		$porders=$Kh9tIMC;
		$Kh9MC=!$porders;
		if($Kh9MC)goto Kh9eWjgx15;
		goto Kh9ldMhx15;
		Kh9eWjgx15:return $this->error('没有满足提交条件的订单');
		goto Kh9x14;
		Kh9ldMhx15:Kh9x14:unset($Kh9tIMC);
		$Kh9tIMC=array_column($porders,'id');
		$ids=$Kh9tIMC;
		M('porder')->where(array('id'=>array('in',$ids)))->setField(array('tlocking'=>3));
		queue('app\\queue\\job\\Work@pordersSubApip',array('ids'=>$ids,'op'=>$this->adminuser['nickname']));
		return $this->success('推送任务提交成功');
	}
	public function batch_apart() {
		unset($Kh9tIMC);
		$Kh9tIMC=$this->create_map();
		$map=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=M('porder')->where($map)->field("id")->select();
		$list=$Kh9tIMC;
		$Kh9MC=count($list)==0;
		if($Kh9MC)goto Kh9eWjgx17;
		goto Kh9ldMhx17;
		Kh9eWjgx17:return $this->error('没有筛选到订单!');
		goto Kh9x16;
		Kh9ldMhx17:Kh9x16:unset($Kh9tIMC);
		$Kh9tIMC=array_column($list,'id');
		$ids=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=M('porder')->where(array('id'=>array('in',$ids),'is_apart'=>array('in','0'),'status'=>array('in','2,9,10')))->field("id")->select();
		$list=$Kh9tIMC;
		$Kh9MC=count($list)==0;
		if($Kh9MC)goto Kh9eWjgx19;
		goto Kh9ldMhx19;
		Kh9eWjgx19:return $this->error('没有筛选到订单（系统会自动筛选待充值、部分充值、压单的订单,子订单和被拆过的单也不能再拆单）');
		goto Kh9x18;
		Kh9ldMhx19:Kh9x18:unset($Kh9tIMC);
		$Kh9tIMC=array_column($list,'id');
		$ids=$Kh9tIMC;
		$this->assign('_total',count($ids));
		$this->assign('_ids',implode(',',$ids));
		$this->assign('reapi',M('reapi')->where(array('is_del'=>0))->order('id desc')->select());
		unset($Kh9tIMC);
		$Kh9tIMC=M('porder')->where(array('id'=>array('in',$ids)))->group('product_name')->field('product_name')->select();
		$miangroup=$Kh9tIMC;
		$Kh9vPMC=count($miangroup)==1;
		if($Kh9vPMC)goto Kh9eWjgx1b;
		goto Kh9ldMhx1b;
		Kh9eWjgx1b:$Kh9vPMD=1;
		goto Kh9x1a;
		Kh9ldMhx1b:$Kh9vPMD=0;
		Kh9x1a:$this->assign('is_same',$Kh9vPMD);
		foreach($miangroup as&$v) {
			unset($Kh9tIMC);
			$Kh9tIMC=floatval(preg_replace('/\\D/','',$v['product_name']));
			$v['mianzhi']=$Kh9tIMC;
			$this->assign('mianzhi',$v['mianzhi']);
		}
		$this->assign('miangroup',$miangroup);
		$this->assign('cates',M('product_cate')->where(array('type'=>M('porder')->where(array('id'=>array('in',$ids)))->value('type')))->order('sort asc')->select());
		return view();
	}
	public function batch_apart_do() {
		unset($Kh9tIMC);
		$Kh9tIMC=I('ids');
		$ids=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=M('porder')->where(array('id'=>array('in',$ids)))->count();
		$pnum=$Kh9tIMC;
		$Kh9MC=$ids=='';
		$Kh9ME=(bool)$Kh9MC;
		$Kh9MF=!$Kh9ME;
		if($Kh9MF)goto Kh9eWjgx1e;
		goto Kh9ldMhx1e;
		Kh9eWjgx1e:$Kh9MD=$pnum==0;
		$Kh9ME=$Kh9MC||$Kh9MD;
		goto Kh9x1d;
		Kh9ldMhx1e:Kh9x1d:if($Kh9ME)goto Kh9eWjgx1f;
		goto Kh9ldMhx1f;
		Kh9eWjgx1f:return $this->error('没有选择订单');
		goto Kh9x1c;
		Kh9ldMhx1f:Kh9x1c:unset($Kh9tIMC);
		$Kh9tIMC=I('product_id/a');
		$product_ids=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=I('num/a');
		$num=$Kh9tIMC;
		$Kh9MC=!$product_ids;
		$Kh9ME=(bool)$Kh9MC;
		$Kh9MF=!$Kh9ME;
		if($Kh9MF)goto Kh9eWjgx1i;
		goto Kh9ldMhx1i;
		Kh9eWjgx1i:$Kh9MD=count($product_ids)==0;
		$Kh9ME=$Kh9MC||$Kh9MD;
		goto Kh9x1h;
		Kh9ldMhx1i:Kh9x1h:if($Kh9ME)goto Kh9eWjgx1j;
		goto Kh9ldMhx1j;
		Kh9eWjgx1j:return $this->error('没有选择套餐');
		goto Kh9x1g;
		Kh9ldMhx1j:Kh9x1g:unset($Kh9tIMC);
		$Kh9tIMC=array();
		$products=$Kh9tIMC;
		foreach($product_ids as $k=>$v) {
			unset($Kh9tIMC);
			$Kh9tIMC=array('product_id'=>$v,'num'=>$num[$k]);
			$products[]=$Kh9tIMC;
		}
		unset($Kh9tIMC);
		$Kh9tIMC=M('product p')->where(array('p.id'=>array('in',$product_ids),'p.added'=>1,'p.is_del'=>0))->field('p.id')->select();
		$product_arr=$Kh9tIMC;
		$Kh9MC=!$product_arr;
		if($Kh9MC)goto Kh9eWjgx1l;
		goto Kh9ldMhx1l;
		Kh9eWjgx1l:return $this->error('未找到对应的产品');
		goto Kh9x1k;
		Kh9ldMhx1l:Kh9x1k:queue('app\\queue\\job\\Work@pordersBatchApart',array('ids'=>explode(',',$ids),'products'=>$products,'op'=>$this->adminuser['nickname']));
		return $this->success('拆单任务提交成功','back');
	}
	public function log() {
		$Kh9MC=intval(I('id'))%10;
		unset($Kh9tIMD);
		$Kh9tIMD=$Kh9MC;
		$num=$Kh9tIMD;
		$Kh9vPMC='porder_log' . $num;
		unset($Kh9tIMD);
		$Kh9tIMD=M($Kh9vPMC)->where(array('porder_id'=>I('id')))->order("id asc")->paginate(50);
		$list=$Kh9tIMD;
		$this->assign('_list',$list);
		return view();
	}
	public function deletes() {
		if(M('porder')->where(array('id'=>I('id')))->setField(array('is_del'=>1)))goto Kh9eWjgx1n;
		goto Kh9ldMhx1n;
		Kh9eWjgx1n:$Kh9vPMC="删除成功|后台|" . $this->adminuser['nickname'];
		Createlog::porderLog(I('id'),$Kh9vPMC);
		return $this->success('删除成功');
		goto Kh9x1m;
		Kh9ldMhx1n:return $this->error('删除失败');
		Kh9x1m:
	}
	public function refund() {
		unset($Kh9tIMC);
		$Kh9tIMC=I('id/a');
		$ids=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=M('porder')->where(array('id'=>array('in',$ids),'status'=>array('in','5,12')))->select();
		$porders=$Kh9tIMC;
		$Kh9MC=!$porders;
		if($Kh9MC)goto Kh9eWjgx1p;
		goto Kh9ldMhx1p;
		Kh9eWjgx1p:return $this->error('未查询到订单');
		goto Kh9x1o;
		Kh9ldMhx1p:Kh9x1o:unset($Kh9tIMC);
		$Kh9tIMC=0;
		$counts=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC='';
		$errmsg=$Kh9tIMC;
		foreach($porders as $porder) {
			if($porder['refund_time'])goto Kh9eWjgx1r;
			goto Kh9ldMhx1r;
			Kh9eWjgx1r:return rjson(1,'订单已经操作过退款！');
			goto Kh9x1q;
			Kh9ldMhx1r:Kh9x1q:$Kh9vPMC="后台|" . session('user_auth')['nickname'];
			$Kh9vPMD='管理员：' . session('user_auth')['nickname'];
			unset($Kh9tIME);
			$Kh9tIME=PorderModel::refund($porder['id'],$Kh9vPMC,$Kh9vPMD);
			$ret=$Kh9tIME;
			$Kh9MC=$ret['errno']==0;
			if($Kh9MC)goto Kh9eWjgx1t;
			goto Kh9ldMhx1t;
			Kh9eWjgx1t:$Kh9oB203=$counts;
			$Kh9oB204=$counts+1;
			$counts=$Kh9oB204;
			goto Kh9x1s;
			Kh9ldMhx1t:$Kh9MC=$porder['order_number'] . $ret['errmsg'];
			$Kh9MD=$Kh9MC . ';';
			$errmsg=$errmsg.$Kh9MD;
			$Kh9nWME=$errmsg;
			Kh9x1s:
		}
		$Kh9MC=$counts==0;
		if($Kh9MC)goto Kh9eWjgx1v;
		goto Kh9ldMhx1v;
		Kh9eWjgx1v:$Kh9vPMC='操作失败,' . $errmsg;
		return $this->error($Kh9vPMC);
		goto Kh9x1u;
		Kh9ldMhx1v:Kh9x1u:$Kh9vPMC="成功处理" . $counts;
		$Kh9vPMD=$Kh9vPMC . "条";
		return $this->success($Kh9vPMD);
	}
	public function set_chenggong() {
		unset($Kh9tIMC);
		$Kh9tIMC=I('id/a');
		$ids=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=M('porder')->where(array('id'=>array('in',$ids),'status'=>array('in','2,3,8,9,10,11')))->select();
		$porders=$Kh9tIMC;
		$Kh9MC=!$porders;
		if($Kh9MC)goto Kh9eWjgx1x;
		goto Kh9ldMhx1x;
		Kh9eWjgx1x:return $this->error('未查询到订单');
		goto Kh9x1w;
		Kh9ldMhx1x:Kh9x1w:unset($Kh9tIMC);
		$Kh9tIMC=0;
		$counts=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC='';
		$errmsg=$Kh9tIMC;
		foreach($porders as $porder) {
			$Kh9vPMC="充值成功|后台|" . $this->adminuser['nickname'];
			unset($Kh9tIMD);
			$Kh9tIMD=PorderModel::rechargeSus($porder['order_number'],$Kh9vPMC);
			$ret=$Kh9tIMD;
			$Kh9MC=$ret['errno']==0;
			if($Kh9MC)goto Kh9eWjgx2z;
			goto Kh9ldMhx2z;
			Kh9eWjgx2z:$Kh9oB204=$counts;
			$Kh9oB205=$counts+1;
			$counts=$Kh9oB205;
			goto Kh9x1y;
			Kh9ldMhx2z:$Kh9MC=$ret['errmsg'] . ';';
			$errmsg=$errmsg.$Kh9MC;
			$Kh9nWMD=$errmsg;
			Kh9x1y:
		}
		$Kh9MC=$counts==0;
		if($Kh9MC)goto Kh9eWjgx22;
		goto Kh9ldMhx22;
		Kh9eWjgx22:$Kh9vPMC='操作失败,' . $errmsg;
		return $this->error($Kh9vPMC);
		goto Kh9x21;
		Kh9ldMhx22:Kh9x21:$Kh9vPMC="成功处理" . $counts;
		$Kh9vPMD=$Kh9vPMC . "条";
		return $this->success($Kh9vPMD);
	}
	public function set_czing() {
		unset($Kh9tIMC);
		$Kh9tIMC=I('id/a');
		$ids=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=M('porder')->where(array('id'=>array('in',$ids),'status'=>array('in','2,8,9,10')))->select();
		$porders=$Kh9tIMC;
		$Kh9MC=!$porders;
		if($Kh9MC)goto Kh9eWjgx24;
		goto Kh9ldMhx24;
		Kh9eWjgx24:return $this->error('未查询到订单');
		goto Kh9x23;
		Kh9ldMhx24:Kh9x23:unset($Kh9tIMC);
		$Kh9tIMC=0;
		$counts=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC='';
		$errmsg=$Kh9tIMC;
		foreach($porders as $porder) {
			$Kh9vPMC="将订单设置为充值中|后台|" . $this->adminuser['nickname'];
			Createlog::porderLog($porder['id'],$Kh9vPMC);
			M('porder')->where(array('id'=>$porder['id']))->setField(array('status'=>3));
			$Kh9oB205=$counts;
			$Kh9oB206=$counts+1;
			$counts=$Kh9oB206;
		}
		$Kh9MC=$counts==0;
		if($Kh9MC)goto Kh9eWjgx26;
		goto Kh9ldMhx26;
		Kh9eWjgx26:$Kh9vPMC='操作失败,' . $errmsg;
		return $this->error($Kh9vPMC);
		goto Kh9x25;
		Kh9ldMhx26:Kh9x25:$Kh9vPMC="成功处理" . $counts;
		$Kh9vPMD=$Kh9vPMC . "条";
		return $this->success($Kh9vPMD);
	}
	public function set_daicz() {
		unset($Kh9tIMC);
		$Kh9tIMC=I('id/a');
		$ids=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=I('prompt_remark');
		$remark=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=M('porder')->where(array('id'=>array('in',$ids),'status'=>array('in','1,3,4,8,10')))->select();
		$porders=$Kh9tIMC;
		$Kh9MC=!$porders;
		if($Kh9MC)goto Kh9eWjgx28;
		goto Kh9ldMhx28;
		Kh9eWjgx28:return $this->error('未查询到订单');
		goto Kh9x27;
		Kh9ldMhx28:Kh9x27:unset($Kh9tIMC);
		$Kh9tIMC=0;
		$counts=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC='';
		$errmsg=$Kh9tIMC;
		foreach($porders as $porder) {
			$Kh9vPMC="将订单设置为待充值|备注：" . $remark;
			$Kh9vPMD=$Kh9vPMC . "|后台:";
			$Kh9vPME=$Kh9vPMD . $this->adminuser['nickname'];
			Createlog::porderLog($porder['id'],$Kh9vPME);
			M('porder')->where(array('id'=>$porder['id']))->setField(array('status'=>2));
			$Kh9MC=(bool)$remark;
			if($Kh9MC)goto Kh9eWjgx2a;
			goto Kh9ldMhx2a;
			Kh9eWjgx2a:$Kh9MC=$remark&&M('porder')->where(array('id'=>$porder['id']))->setField(array('remark'=>$remark));
			goto Kh9x29;
			Kh9ldMhx2a:Kh9x29:$Kh9oB206=$counts;
			$Kh9oB207=$counts+1;
			$counts=$Kh9oB207;
		}
		$Kh9MC=$counts==0;
		if($Kh9MC)goto Kh9eWjgx2c;
		goto Kh9ldMhx2c;
		Kh9eWjgx2c:$Kh9vPMC='操作失败,' . $errmsg;
		return $this->error($Kh9vPMC);
		goto Kh9x2b;
		Kh9ldMhx2c:Kh9x2b:$Kh9vPMC="成功处理" . $counts;
		$Kh9vPMD=$Kh9vPMC . "条";
		return $this->success($Kh9vPMD);
	}
	public function set_shibai() {
		unset($Kh9tIMC);
		$Kh9tIMC=I('id/a');
		$ids=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=M('porder')->where(array('id'=>array('in',$ids),'status'=>array('in','2,3,8,9,10,11')))->select();
		$porders=$Kh9tIMC;
		$Kh9MC=!$porders;
		if($Kh9MC)goto Kh9eWjgx2e;
		goto Kh9ldMhx2e;
		Kh9eWjgx2e:return $this->error('未查询到订单');
		goto Kh9x2d;
		Kh9ldMhx2e:Kh9x2d:unset($Kh9tIMC);
		$Kh9tIMC=0;
		$counts=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC='';
		$errmsg=$Kh9tIMC;
		foreach($porders as $porder) {
			$Kh9vPMC="充值失败|后台|" . $this->adminuser['nickname'];
			unset($Kh9tIMD);
			$Kh9tIMD=PorderModel::rechargeFailDo($porder['order_number'],$Kh9vPMC);
			$ret=$Kh9tIMD;
			$Kh9MC=$ret['errno']==0;
			if($Kh9MC)goto Kh9eWjgx2g;
			goto Kh9ldMhx2g;
			Kh9eWjgx2g:$Kh9oB207=$counts;
			$Kh9oB208=$counts+1;
			$counts=$Kh9oB208;
			goto Kh9x2f;
			Kh9ldMhx2g:$Kh9MC=$ret['errmsg'] . ';';
			$errmsg=$errmsg.$Kh9MC;
			$Kh9nWMD=$errmsg;
			Kh9x2f:
		}
		$Kh9MC=$counts==0;
		if($Kh9MC)goto Kh9eWjgx2i;
		goto Kh9ldMhx2i;
		Kh9eWjgx2i:$Kh9vPMC='操作失败,' . $errmsg;
		return $this->error($Kh9vPMC);
		goto Kh9x2h;
		Kh9ldMhx2i:Kh9x2h:$Kh9vPMC="成功处理" . $counts;
		$Kh9vPMD=$Kh9vPMC . "条";
		return $this->success($Kh9vPMD);
	}
	public function set_partsus() {
		unset($Kh9tIMC);
		$Kh9tIMC=I('id/a');
		$ids=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=M('porder')->where(array('id'=>array('in',$ids),'status'=>array('in','2,3,8,9,10,11')))->select();
		$porders=$Kh9tIMC;
		$Kh9MC=!$porders;
		if($Kh9MC)goto Kh9eWjgx2k;
		goto Kh9ldMhx2k;
		Kh9eWjgx2k:return $this->error('未查询到订单');
		goto Kh9x2j;
		Kh9ldMhx2k:Kh9x2j:unset($Kh9tIMC);
		$Kh9tIMC=0;
		$counts=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC='';
		$errmsg=$Kh9tIMC;
		foreach($porders as $porder) {
			unset($Kh9tIMC);
			$Kh9tIMC=floatval(preg_replace('/\\D/','',$porder['product_name']));
			$allmian=$Kh9tIMC;
			unset($Kh9tIMC);
			$Kh9tIMC=floatval(I('prompt_remark'));
			$charge_amount=$Kh9tIMC;
			$Kh9MC=$allmian<=$charge_amount;
			if($Kh9MC)goto Kh9eWjgx2m;
			goto Kh9ldMhx2m;
			Kh9eWjgx2m:$Kh9MC=$porder['order_number'] . '部分充值面值不合法;';
			$errmsg=$errmsg.$Kh9MC;
			$Kh9nWMD=$errmsg;
			continue 1;
			goto Kh9x2l;
			Kh9ldMhx2m:Kh9x2l:$Kh9vPMC="部分充值成功|面值" . $charge_amount;
			$Kh9vPMD=$Kh9vPMC . "|后台|";
			$Kh9vPME=$Kh9vPMD . $this->adminuser['nickname'];
			$Kh9vPMF='部分充值：' . $charge_amount;
			unset($Kh9tIMG);
			$Kh9tIMG=PorderModel::rechargePartDo($porder['order_number'],$Kh9vPME,$charge_amount,$Kh9vPMF);
			$ret=$Kh9tIMG;
			$Kh9MC=$ret['errno']==0;
			if($Kh9MC)goto Kh9eWjgx2o;
			goto Kh9ldMhx2o;
			Kh9eWjgx2o:$Kh9oB208=$counts;
			$Kh9oB209=$counts+1;
			$counts=$Kh9oB209;
			goto Kh9x2n;
			Kh9ldMhx2o:$Kh9MC=$ret['errmsg'] . ';';
			$errmsg=$errmsg.$Kh9MC;
			$Kh9nWMD=$errmsg;
			Kh9x2n:
		}
		$Kh9MC=$counts==0;
		if($Kh9MC)goto Kh9eWjgx2q;
		goto Kh9ldMhx2q;
		Kh9eWjgx2q:$Kh9vPMC='操作失败,' . $errmsg;
		return $this->error($Kh9vPMC);
		goto Kh9x2p;
		Kh9ldMhx2q:Kh9x2p:$Kh9vPMC="成功处理" . $counts;
		$Kh9vPMD=$Kh9vPMC . "条";
		return $this->success($Kh9vPMD);
	}
	public function set_aprefund() {
		unset($Kh9tIMC);
		$Kh9tIMC=I('id/a');
		$ids=$Kh9tIMC;
		$Kh9vPMC="后台-" . $this->adminuser['nickname'];
		return PorderModel::applyCancelOrder($ids,$Kh9vPMC);
	}
	public function set_apbreak() {
		unset($Kh9tIMC);
		$Kh9tIMC=I('id/a');
		$ids=$Kh9tIMC;
		$Kh9vPMC="后台-" . $this->adminuser['nickname'];
		return PorderModel::applyBreakOrder($ids,$Kh9vPMC);
	}
	public function batch_sms() {
		unset($Kh9tIMC);
		$Kh9tIMC=$this->create_map();
		$map=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=M('porder')->where($map)->field("id")->select();
		$list=$Kh9tIMC;
		$Kh9MC=count($list)==0;
		if($Kh9MC)goto Kh9eWjgx2s;
		goto Kh9ldMhx2s;
		Kh9eWjgx2s:return $this->error('没有筛选到订单!');
		goto Kh9x2r;
		Kh9ldMhx2s:Kh9x2r:unset($Kh9tIMC);
		$Kh9tIMC=array_column($list,'id');
		$ids=$Kh9tIMC;
		$this->assign('_total',count($ids));
		$this->assign('_ids',implode(',',$ids));
		return view();
	}
	public function batch_sms_do() {
		unset($Kh9tIMC);
		$Kh9tIMC=I('ids');
		$ids=$Kh9tIMC;
		queue('app\\queue\\job\\Work@callFunc',array('class'=>'\\app\\common\\library\\SmsNotice','func'=>'porderBatchSms','param'=>json_encode(array('ids'=>$ids,'template'=>I('template'),'operator'=>$this->adminuser['nickname']))));
		return $this->success("任务提交成功",'back');
	}
	public function notification() {
		unset($Kh9tIMC);
		$Kh9tIMC=I('id/a');
		$ids=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=M('porder')->where(array('id'=>array('in',$ids),'status'=>array('in','3,4,5,6,7,12,13')))->field('id')->select();
		$porders=$Kh9tIMC;
		$Kh9MC=!$porders;
		if($Kh9MC)goto Kh9eWjgx2u;
		goto Kh9ldMhx2u;
		Kh9eWjgx2u:return $this->error('未查询到订单');
		goto Kh9x2t;
		Kh9ldMhx2u:Kh9x2t:unset($Kh9tIMC);
		$Kh9tIMC=0;
		$sus_counts=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=0;
		$fail_counts=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC='';
		$errmsg=$Kh9tIMC;
		foreach($porders as $porder) {
			unset($Kh9tIMC);
			$Kh9tIMC=PorderModel::notification($porder['id']);
			$ret=$Kh9tIMC;
			$Kh9MC=$ret['errno']==0;
			if($Kh9MC)goto Kh9eWjgx2w;
			goto Kh9ldMhx2w;
			Kh9eWjgx2w:$Kh9oB209=$sus_counts;
			$Kh9oB210=$sus_counts+1;
			$sus_counts=$Kh9oB210;
			goto Kh9x2v;
			Kh9ldMhx2w:$Kh9oB210=$fail_counts;
			$Kh9oB211=$fail_counts+1;
			$fail_counts=$Kh9oB211;
			$Kh9MC=$ret['errmsg'] . ';';
			$errmsg=$errmsg.$Kh9MC;
			$Kh9nWMD=$errmsg;
			Kh9x2v:
		}
		$Kh9MC=$sus_counts==0;
		if($Kh9MC)goto Kh9eWjgx2y;
		goto Kh9ldMhx2y;
		Kh9eWjgx2y:$Kh9vPMC='回调失败,' . $errmsg;
		return $this->error($Kh9vPMC);
		goto Kh9x2x;
		Kh9ldMhx2y:Kh9x2x:$Kh9vPMC="回调成功" . $sus_counts;
		$Kh9vPMD=$Kh9vPMC . "条/失败";
		$Kh9vPME=$Kh9vPMD . $fail_counts;
		$Kh9vPMF=$Kh9vPME . "条";
		return $this->success($Kh9vPMF);
	}
	public function untlock() {
		unset($Kh9tIMC);
		$Kh9tIMC=I('id/a');
		$ids=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=M('porder')->where(array('id'=>array('in',$ids),'tlocking'=>array('gt',0)))->field('id,tlocking')->select();
		$porders=$Kh9tIMC;
		$Kh9MC=!$porders;
		if($Kh9MC)goto Kh9eWjgx31;
		goto Kh9ldMhx31;
		Kh9eWjgx31:return $this->error('未查询到订单');
		goto Kh9x3z;
		Kh9ldMhx31:Kh9x3z:unset($Kh9tIMC);
		$Kh9tIMC=0;
		$sus_counts=$Kh9tIMC;
		foreach($porders as $porder) {
			M('porder')->where(array('id'=>$porder['id']))->setField(array('tlocking'=>0));
			$Kh9vPMC='解除锁定|原锁定为' . $porder['tlocking'];
			$Kh9vPMD=$Kh9vPMC . "|管理员：";
			$Kh9vPME=$Kh9vPMD . session('user_auth')['nickname'];
			Createlog::porderLog($porder['id'],$Kh9vPME);
			$Kh9oB211=$sus_counts;
			$Kh9oB212=$sus_counts+1;
			$sus_counts=$Kh9oB212;
		}
		$Kh9vPMC="操作成功" . $sus_counts;
		$Kh9vPMD=$Kh9vPMC . "条";
		return $this->success($Kh9vPMD);
	}
	private function create_map() {
	    unset($Kh9tIMC);
	    $Kh9tIMC=I('ids');
	    if($Kh9tIMC){
	        $Kh9tIMC=array('in',$Kh9tIMC);
		    $map["id"]=$Kh9tIMC;
	    }
		unset($Kh9tIMC);
		$Kh9tIMC=0;
		$map['is_del']=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=trim(I('key'));
		$key=$Kh9tIMC;
		if($Kh9tIMC)goto Kh9eWjgx33;
		goto Kh9ldMhx33;
		Kh9eWjgx33:unset($Kh9tIMC);
		$Kh9tIMC=I('query_name');
		$query_name=$Kh9tIMC;
		if($query_name)goto Kh9eWjgx35;
		goto Kh9ldMhx35;
		Kh9eWjgx35:$Kh9MC=strpos($query_name,'.')!==false;
		if($Kh9MC)goto Kh9eWjgx37;
		goto Kh9ldMhx37;
		Kh9eWjgx37:unset($Kh9tIMC);
		$Kh9tIMC=explode('.',$query_name);
		$qu_arr=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=M($qu_arr[0])->where(array($qu_arr[1]=>$key))->field('id')->select();
		$qu_rets=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=array('in',array_column($qu_rets,'id'));
		$map[$qu_arr[2]]=$Kh9tIMC;
		goto Kh9x36;
		Kh9ldMhx37:unset($Kh9tIMC);
		$Kh9tIMC=$key;
		$map[$query_name]=$Kh9tIMC;
		Kh9x36:goto Kh9x34;
		Kh9ldMhx35:$Kh9vPMC='%' . $key;
		$Kh9vPMD=$Kh9vPMC . '%';
		unset($Kh9tIME);
		$Kh9tIME=array('like',$Kh9vPMD);
		$map['order_number|title|product_name|mobile|out_trade_num|guishu|api_order_number|remark|isp|apart_order_number|lable']=$Kh9tIME;
		Kh9x34:goto Kh9x32;
		Kh9ldMhx33:Kh9x32:if(I('status'))goto Kh9eWjgx39;
		goto Kh9ldMhx39;
		Kh9eWjgx39:unset($Kh9tIMC);
		$Kh9tIMC=array('in',I('status'));
		$map['status']=$Kh9tIMC;
		goto Kh9x38;
		Kh9ldMhx39:Kh9x38:if(I('type'))goto Kh9eWjgx3b;
		goto Kh9ldMhx3b;
		Kh9eWjgx3b:unset($Kh9tIMC);
		$Kh9tIMC=I('type');
		$map['type']=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=M('product_cate')->where(array('type'=>I('type')))->select();
		$cates=$Kh9tIMC;
		$this->assign('cates',$cates);
		if(I('cate'))goto Kh9eWjgx3d;
		goto Kh9ldMhx3d;
		Kh9eWjgx3d:unset($Kh9tIMC);
		$Kh9tIMC=M('product')->where(array('cate_id'=>I('cate'),'is_del'=>0))->select();
		$product=$Kh9tIMC;
		$this->assign('products',$product);
		if(I('product_id'))goto Kh9eWjgx3f;
		goto Kh9ldMhx3f;
		Kh9eWjgx3f:unset($Kh9tIMC);
		$Kh9tIMC=I('product_id');
		$map['product_id']=$Kh9tIMC;
		goto Kh9x3e;
		Kh9ldMhx3f:Kh9x3e:goto Kh9x3c;
		Kh9ldMhx3d:Kh9x3c:goto Kh9x3a;
		Kh9ldMhx3b:Kh9x3a:if(I('is_apart'))goto Kh9eWjgx3h;
		goto Kh9ldMhx3h;
		Kh9eWjgx3h:$Kh9MC=intval(I('is_apart'))-1;
		unset($Kh9tIMD);
		$Kh9tIMD=$Kh9MC;
		$map['is_apart']=$Kh9tIMD;
		goto Kh9x3g;
		Kh9ldMhx3h:unset($Kh9tIMC);
		$Kh9tIMC=array('in',array(0,2));
		$map['is_apart']=$Kh9tIMC;
		Kh9x3g:if(I('apply_refund'))goto Kh9eWjgx3j;
		goto Kh9ldMhx3j;
		Kh9eWjgx3j:$Kh9MC=intval(I('apply_refund'))-1;
		unset($Kh9tIMD);
		$Kh9tIMD=$Kh9MC;
		$map['apply_refund']=$Kh9tIMD;
		goto Kh9x3i;
		Kh9ldMhx3j:Kh9x3i:if(I('isp'))goto Kh9eWjgx3l;
		goto Kh9ldMhx3l;
		Kh9eWjgx3l:unset($Kh9tIMC);
		$Kh9tIMC=getISPText(I('isp'));
		$map['isp']=$Kh9tIMC;
		goto Kh9x3k;
		Kh9ldMhx3l:Kh9x3k:if(I('?apart_order_number'))goto Kh9eWjgx3n;
		goto Kh9ldMhx3n;
		Kh9eWjgx3n:unset($Kh9tIMC);
		$Kh9tIMC=I('apart_order_number');
		$map['apart_order_number']=$Kh9tIMC;
		goto Kh9x3m;
		Kh9ldMhx3n:Kh9x3m:if(I('client'))goto Kh9eWjgx3p;
		goto Kh9ldMhx3p;
		Kh9eWjgx3p:unset($Kh9tIMC);
		$Kh9tIMC=I('client');
		$map['client']=$Kh9tIMC;
		goto Kh9x3o;
		Kh9ldMhx3p:Kh9x3o:if(I('reapi_id'))goto Kh9eWjgx3r;
		goto Kh9ldMhx3r;
		Kh9eWjgx3r:unset($Kh9tIMC);
		$Kh9tIMC=I('reapi_id');
		$map['api_cur_id']=$Kh9tIMC;
		goto Kh9x3q;
		Kh9ldMhx3r:Kh9x3q:if(I('pay_way'))goto Kh9eWjgx3t;
		goto Kh9ldMhx3t;
		Kh9eWjgx3t:unset($Kh9tIMC);
		$Kh9tIMC=I('pay_way');
		$map['pay_way']=$Kh9tIMC;
		goto Kh9x3s;
		Kh9ldMhx3t:Kh9x3s:if(I('is_notification'))goto Kh9eWjgx3v;
		goto Kh9ldMhx3v;
		Kh9eWjgx3v:$Kh9MC=intval(I('is_notification'))-1;
		unset($Kh9tIMD);
		$Kh9tIMD=$Kh9MC;
		$map['is_notification']=$Kh9tIMD;
		goto Kh9x3u;
		Kh9ldMhx3v:Kh9x3u:if(I('customer_id'))goto Kh9eWjgx3x;
		goto Kh9ldMhx3x;
		Kh9eWjgx3x:unset($Kh9tIMC);
		$Kh9tIMC=I('customer_id');
		$map['customer_id']=$Kh9tIMC;
		goto Kh9x3w;
		Kh9ldMhx3x:Kh9x3w:$Kh9MC=(bool)I('end_time');
		if($Kh9MC)goto Kh9eWjgx41;
		goto Kh9ldMhx41;
		Kh9eWjgx41:$Kh9MC=I('end_time')&&I('begin_time');
		goto Kh9x4z;
		Kh9ldMhx41:Kh9x4z:if($Kh9MC)goto Kh9eWjgx42;
		goto Kh9ldMhx42;
		Kh9eWjgx42:if(I('time_style'))goto Kh9eWjgx44;
		goto Kh9ldMhx44;
		Kh9eWjgx44:$Kh9MC=I('time_style');
		goto Kh9x43;
		Kh9ldMhx44:$Kh9MC='create_time';
		Kh9x43:unset($Kh9tIMD);
		$Kh9tIMD=$Kh9MC;
		$time_style=$Kh9tIMD;
		unset($Kh9tIMC);
		$Kh9tIMC=array('between',array(strtotime(I('begin_time')),strtotime(I('end_time'))));
		$map[$time_style]=$Kh9tIMC;
		goto Kh9x3y;
		Kh9ldMhx42:Kh9x3y:if(I('batch_mobile'))goto Kh9eWjgx46;
		goto Kh9ldMhx46;
		Kh9eWjgx46:unset($Kh9tIMC);
		$Kh9tIMC=str_replace(' ','',str_replace(array("\r\n", "\r\n", "\r\n"),",",I('batch_mobile')));
		$batch_order_number=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=preg_grep('/\\S+/',explode(',',$batch_order_number));
		$bt_mo=$Kh9tIMC;
		$Kh9MD=(bool)$bt_mo;
		if($Kh9MD)goto Kh9eWjgx48;
		goto Kh9ldMhx48;
		Kh9eWjgx48:unset($Kh9tIMC);
		$Kh9tIMC=array("in",$bt_mo);
		unset($Kh9tIME);
		$Kh9tIME=$Kh9tIMC;
		$map['mobile']=$Kh9tIME;
		$Kh9MD=$bt_mo&&$Kh9tIMC;
		goto Kh9x47;
		Kh9ldMhx48:Kh9x47:goto Kh9x45;
		Kh9ldMhx46:Kh9x45:if(I('batch_order_number'))goto Kh9eWjgx4a;
		goto Kh9ldMhx4a;
		Kh9eWjgx4a:unset($Kh9tIMC);
		$Kh9tIMC=str_replace(' ','',str_replace(array("\r\n", "\r\n", "\r\n"),",",I('batch_order_number')));
		$batch_order_number=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=preg_grep('/\\S+/',explode(',',$batch_order_number));
		$bt_mo=$Kh9tIMC;
		$Kh9MD=(bool)$bt_mo;
		if($Kh9MD)goto Kh9eWjgx4c;
		goto Kh9ldMhx4c;
		Kh9eWjgx4c:unset($Kh9tIMC);
		$Kh9tIMC=array("in",$bt_mo);
		unset($Kh9tIME);
		$Kh9tIME=$Kh9tIMC;
		$map['order_number']=$Kh9tIME;
		$Kh9MD=$bt_mo&&$Kh9tIMC;
		goto Kh9x4b;
		Kh9ldMhx4c:Kh9x4b:goto Kh9x49;
		Kh9ldMhx4a:Kh9x49:if(I('batch_api_order_number'))goto Kh9eWjgx4e;
		goto Kh9ldMhx4e;
		Kh9eWjgx4e:unset($Kh9tIMC);
		$Kh9tIMC=str_replace(' ','',str_replace(array("\r\n", "\r\n", "\r\n"),",",I('batch_api_order_number')));
		$batch_order_number=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=preg_grep('/\\S+/',explode(',',$batch_order_number));
		$bt_mo=$Kh9tIMC;
		$Kh9MD=(bool)$bt_mo;
		if($Kh9MD)goto Kh9eWjgx4g;
		goto Kh9ldMhx4g;
		Kh9eWjgx4g:unset($Kh9tIMC);
		$Kh9tIMC=array("in",$bt_mo);
		unset($Kh9tIME);
		$Kh9tIME=$Kh9tIMC;
		$map['api_order_number']=$Kh9tIME;
		$Kh9MD=$bt_mo&&$Kh9tIMC;
		goto Kh9x4f;
		Kh9ldMhx4g:Kh9x4f:goto Kh9x4d;
		Kh9ldMhx4e:Kh9x4d:return $map;
	}
	public function in_excel() {
		if(request()->isPost())goto Kh9eWjgx4i;
		goto Kh9ldMhx4i;
		Kh9eWjgx4i:set_time_limit(0);
		vendor("phpexcel.PHPExcel");
		unset($Kh9tIMC);
		$Kh9tIMC=request()->file('excel');
		$file=$Kh9tIMC;
		if(empty($file))goto Kh9eWjgx4k;
		goto Kh9ldMhx4k;
		Kh9eWjgx4k:return $this->error('请选择上传文件');
		goto Kh9x4j;
		Kh9ldMhx4k:Kh9x4j:unset($Kh9tIMC);
		$Kh9tIMC=$file->validate(array('size'=>C('DOWNLOAD_UPLOAD.maxSize'),'ext'=>'xlsx'))->move(C('DOWNLOAD_UPLOAD.movePath'));
		$info=$Kh9tIMC;
		if($info)goto Kh9eWjgx4m;
		goto Kh9ldMhx4m;
		Kh9eWjgx4m:unset($Kh9tIMC);
		$Kh9tIMC=$info->getSaveName();
		$exclePath=$Kh9tIMC;
		$Kh9MC=C('DOWNLOAD_UPLOAD.movePath') . DS;
		$Kh9MD=$Kh9MC . $exclePath;
		unset($Kh9tIME);
		$Kh9tIME=$Kh9MD;
		$file_name=$Kh9tIME;
		unset($Kh9tIMC);
		$Kh9tIMC=\PHPExcel_IOFactory::createReader("Excel2007");
		$objReader=$Kh9tIMC;
		unset($Kh9tIvPMC);
		$Kh9tIvPMC='utf-8';
		$encode=$Kh9tIvPMC;
		unset($Kh9tIMD);
		$Kh9tIMD=$objReader->load($file_name,$Kh9tIvPMC);
		$obj_PHPExcel=$Kh9tIMD;
		unset($Kh9tIMC);
		$Kh9tIMC=$obj_PHPExcel->getSheet(0)->toArray();
		$excel_array=$Kh9tIMC;
		array_shift($excel_array);
		unset($Kh9tIMC);
		$Kh9tIMC=M('customer')->where(array('id'=>C('PORDER_EXCEL_CUSID'),'is_del'=>0))->find();
		$cus=$Kh9tIMC;
		$Kh9MC=!$cus;
		if($Kh9MC)goto Kh9eWjgx4o;
		goto Kh9ldMhx4o;
		Kh9eWjgx4o:return $this->error('未找到正确的导入用户ID,点击导入设置配置用户ID');
		goto Kh9x4n;
		Kh9ldMhx4o:Kh9x4n:unset($Kh9tIMC);
		$Kh9tIMC=array();
		$tirow=$Kh9tIMC;
		foreach($excel_array as $k=>$v) {
			unset($Kh9tIMC);
			$Kh9tIMC=trim($v[0]);
			$product_id=$Kh9tIMC;
			unset($Kh9tIMC);
			$Kh9tIMC=trim($v[1]);
			$mobile=$Kh9tIMC;
			unset($Kh9tIMC);
			$Kh9tIMC=$v[2];
			$remark=$Kh9tIMC;
			if(isset($v[3]))goto Kh9eWjgx4q;
			goto Kh9ldMhx4q;
			Kh9eWjgx4q:$Kh9MC=trim($v[3]);
			goto Kh9x4p;
			Kh9ldMhx4q:$Kh9MC='';
			Kh9x4p:unset($Kh9tIMD);
			$Kh9tIMD=$Kh9MC;
			$out_trade_num=$Kh9tIMD;
			if(isset($v[4]))goto Kh9eWjgx4s;
			goto Kh9ldMhx4s;
			Kh9eWjgx4s:$Kh9MC=trim($v[4]);
			goto Kh9x4r;
			Kh9ldMhx4s:$Kh9MC='';
			Kh9x4r:unset($Kh9tIMD);
			$Kh9tIMD=$Kh9MC;
			$prov=$Kh9tIMD;
			if(isset($v[5]))goto Kh9eWjgx4u;
			goto Kh9ldMhx4u;
			Kh9eWjgx4u:$Kh9MC=trim($v[5]);
			goto Kh9x4t;
			Kh9ldMhx4u:$Kh9MC='';
			Kh9x4t:unset($Kh9tIMD);
			$Kh9tIMD=$Kh9MC;
			$id_card_no=$Kh9tIMD;
			if(isset($v[6]))goto Kh9eWjgx4w;
			goto Kh9ldMhx4w;
			Kh9eWjgx4w:$Kh9MC=trim($v[6]);
			goto Kh9x4v;
			Kh9ldMhx4w:$Kh9MC='';
			Kh9x4v:unset($Kh9tIMD);
			$Kh9tIMD=$Kh9MC;
			$ytype=$Kh9tIMD;
			if(isset($v[7]))goto Kh9eWjgx4y;
			goto Kh9ldMhx4y;
			Kh9eWjgx4y:$Kh9MC=trim($v[7]);
			goto Kh9x4x;
			Kh9ldMhx4y:$Kh9MC='';
			Kh9x4x:unset($Kh9tIMD);
			$Kh9tIMD=$Kh9MC;
			$city=$Kh9tIMD;
			$Kh9MC=$k+2;
			$Kh9MD='  #第[' . $Kh9MC;
			$Kh9ME=$Kh9MD . '行]';
			unset($Kh9tIMF);
			$Kh9tIMF=$Kh9ME;
			$hangstr=$Kh9tIMF;
			unset($Kh9tIMC);
			$Kh9tIMC=M('product')->where(array('id'=>$product_id,'is_del'=>0))->value('type');
			$product_type=$Kh9tIMC;
			if(in_array($product_type,array(1,2)))goto Kh9eWjgx51;
			goto Kh9ldMhx51;
			Kh9eWjgx51:unset($Kh9tIMC);
			$Kh9tIMC=QCellCore($mobile);
			$guishu=$Kh9tIMC;
			$Kh9MC=$guishu['errno']!=0;
			if($Kh9MC)goto Kh9eWjgx53;
			goto Kh9ldMhx53;
			Kh9eWjgx53:$Kh9vPMC='归属地未找到:' . $mobile;
			$Kh9vPMD=$Kh9vPMC . ',';
			$Kh9vPME=$Kh9vPMD . $guishu['errmsg'];
			$Kh9vPMF=$Kh9vPME . $hangstr;
			return $this->error($Kh9vPMF,'','',20);
			goto Kh9x52;
			Kh9ldMhx53:Kh9x52:$Kh9vPMC='%' . $guishu['data']['isp'];
			$Kh9vPMD=$Kh9vPMC . '%';
			unset($Kh9tIME);
			$Kh9tIME=array('like',$Kh9vPMD);
			$map['p.isp']=$Kh9tIME;
			unset($Kh9tIMC);
			$Kh9tIMC=$guishu['data']['ispstr'];
			$tirow[$k]['isp']=$Kh9tIMC;
			$Kh9MC=$guishu['data']['prov'] . $guishu['data']['city'];
			unset($Kh9tIMD);
			$Kh9tIMD=$Kh9MC;
			$tirow[$k]['guishu']=$Kh9tIMD;
			$Kh9MC=$guishu['data']['ispstr'] . ',';
			$Kh9MD=$Kh9MC . $hangstr;
			unset($Kh9tIME);
			$Kh9tIME=$Kh9MD;
			$hangstr=$Kh9tIME;
			unset($Kh9tIMC);
			$Kh9tIMC=$guishu['data']['prov'];
			$prov=$Kh9tIMC;
			unset($Kh9tIMC);
			$Kh9tIMC=$guishu['data']['city'];
			$city=$Kh9tIMC;
			goto Kh9x5z;
			Kh9ldMhx51:Kh9x5z:unset($Kh9tIMC);
			$Kh9tIMC=$product_id;
			$map['p.id']=$Kh9tIMC;
			unset($Kh9tIMC);
			$Kh9tIMC=1;
			$map['p.added']=$Kh9tIMC;
			unset($Kh9tIMC);
			$Kh9tIMC=ProductModel::getProduct($map,$cus['id'],$prov,$city);
			$resdata=$Kh9tIMC;
			$Kh9MC=$resdata['errno']!=0;
			if($Kh9MC)goto Kh9eWjgx55;
			goto Kh9ldMhx55;
			Kh9eWjgx55:$Kh9vPMC='未找到匹配的充值产品，' . $resdata['errmsg'];
			$Kh9vPMD=$Kh9vPMC . '，套餐id:';
			$Kh9vPME=$Kh9vPMD . $product_id;
			$Kh9vPMF=$Kh9vPME . '，手机：';
			$Kh9vPMG=$Kh9vPMF . $mobile;
			$Kh9vPMH=$Kh9vPMG . '，';
			$Kh9vPMI=$Kh9vPMH . $hangstr;
			return $this->error($Kh9vPMI,'','',20);
			goto Kh9x54;
			Kh9ldMhx55:Kh9x54:unset($Kh9tIMC);
			$Kh9tIMC=$resdata['data'];
			$product=$Kh9tIMC;
			unset($Kh9tIMC);
			$Kh9tIMC=$product_id;
			$tirow[$k]['product_id']=$Kh9tIMC;
			unset($Kh9tIMC);
			$Kh9tIMC=$mobile;
			$tirow[$k]['mobile']=$Kh9tIMC;
			unset($Kh9tIMC);
			$Kh9tIMC=$remark;
			$tirow[$k]['remark']=$Kh9tIMC;
			unset($Kh9tIMC);
			$Kh9tIMC=$prov;
			$tirow[$k]['area']=$Kh9tIMC;
			unset($Kh9tIMC);
			$Kh9tIMC=$city;
			$tirow[$k]['city']=$Kh9tIMC;
			unset($Kh9tIMC);
			$Kh9tIMC=$ytype;
			$tirow[$k]['ytype']=$Kh9tIMC;
			unset($Kh9tIMC);
			$Kh9tIMC=$id_card_no;
			$tirow[$k]['id_card_no']=$Kh9tIMC;
			unset($Kh9tIMC);
			$Kh9tIMC=$product['name'];
			$tirow[$k]['product_name']=$Kh9tIMC;
			unset($Kh9tIMC);
			$Kh9tIMC=$product['price'];
			$tirow[$k]['total_price']=$Kh9tIMC;
			unset($Kh9tIMC);
			$Kh9tIMC=$product['desc'];
			$tirow[$k]['product_desc']=$Kh9tIMC;
			unset($Kh9tIMC);
			$Kh9tIMC=$product['api_open'];
			$tirow[$k]['api_open']=$Kh9tIMC;
			unset($Kh9tIMC);
			$Kh9tIMC=$product['api_arr'];
			$tirow[$k]['api_arr']=$Kh9tIMC;
			unset($Kh9tIMC);
			$Kh9tIMC=-1;
			$tirow[$k]['api_cur_index']=$Kh9tIMC;
			unset($Kh9tIMC);
			$Kh9tIMC=$product['type'];
			$tirow[$k]['type']=$Kh9tIMC;
			unset($Kh9tIMC);
			$Kh9tIMC=1;
			$tirow[$k]['status']=$Kh9tIMC;
			$Kh9MC=$k+2;
			unset($Kh9tIMD);
			$Kh9tIMD=$Kh9MC;
			$tirow[$k]['hang']=$Kh9tIMD;
			unset($Kh9tIMC);
			$Kh9tIMC=$out_trade_num;
			$tirow[$k]['out_trade_num']=$Kh9tIMC;
			unset($Kh9tIMC);
			$Kh9tIMC=time();
			$tirow[$k]['create_time']=$Kh9tIMC;
		}
		unset($Kh9tIMC);
		$Kh9tIMC=M('proder_excel')->insertAll($tirow);
		$sh=$Kh9tIMC;
		$Kh9vPMC='成功导入' . $sh;
		$Kh9vPMD=$Kh9vPMC . '条,即将刷新';
		return $this->success($Kh9vPMD,U('porder_excel',array('status'=>1)));
		goto Kh9x4l;
		Kh9ldMhx4m:return $this->error($file->getError());
		Kh9x4l:goto Kh9x4h;
		Kh9ldMhx4i:return $this->error('错误的请求方式');
		Kh9x4h:
	}
	public function porder_excel() {
		unset($Kh9tIMC);
		$Kh9tIMC=array();
		$map=$Kh9tIMC;
		if(I('?status'))goto Kh9eWjgx57;
		goto Kh9ldMhx57;
		Kh9eWjgx57:$Kh9MC=I('status');
		goto Kh9x56;
		Kh9ldMhx57:$Kh9MC=1;
		Kh9x56:unset($Kh9tIMD);
		$Kh9tIMD=$Kh9MC;
		$status=$Kh9tIMD;
		if($status)goto Kh9eWjgx59;
		goto Kh9ldMhx59;
		Kh9eWjgx59:unset($Kh9tIMC);
		$Kh9tIMC=$status;
		$map['status']=$Kh9tIMC;
		goto Kh9x58;
		Kh9ldMhx59:Kh9x58:unset($Kh9tIMC);
		$Kh9tIMC=M('proder_excel')->where($map)->field("*,(select type_name from dyr_product_type where id=type) as type_name")->select();
		$list=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=0;
		$alljy_pt=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=0;
		$alljy_dr=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=0;
		$total_price=$Kh9tIMC;
		foreach($list as&$item) {
			unset($Kh9tIMC);
			$Kh9tIMC=floatval(preg_replace('/\\D/','',$item['product_name']));
			$item['ptjiaoyan']=$Kh9tIMC;
			unset($Kh9tIMC);
			$Kh9tIMC=floatval(preg_replace('/\\D/','',$item['remark']));
			$item['drjiaoyan']=$Kh9tIMC;
			$Kh9MC=$item['ptjiaoyan']==$item['drjiaoyan'];
			if($Kh9MC)goto Kh9eWjgx5b;
			goto Kh9ldMhx5b;
			Kh9eWjgx5b:$Kh9MD=1;
			goto Kh9x5a;
			Kh9ldMhx5b:$Kh9MD=0;
			Kh9x5a:unset($Kh9tIME);
			$Kh9tIME=$Kh9MD;
			$item['jy_jg']=$Kh9tIME;
			$alljy_dr=$alljy_dr+$item['drjiaoyan'];
			$Kh9nWMC=$alljy_dr;
			$alljy_pt=$alljy_pt+$item['ptjiaoyan'];
			$Kh9nWMC=$alljy_pt;
			$total_price=$total_price+$item['total_price'];
			$Kh9nWMC=$total_price;
		}
		$this->assign('alljy_pt',$alljy_pt);
		$this->assign('alljy_dr',$alljy_dr);
		$Kh9vPMC=$alljy_pt==$alljy_dr;
		if($Kh9vPMC)goto Kh9eWjgx5d;
		goto Kh9ldMhx5d;
		Kh9eWjgx5d:$Kh9vPMD=1;
		goto Kh9x5c;
		Kh9ldMhx5d:$Kh9vPMD=0;
		Kh9x5c:$this->assign('alljy_jg',$Kh9vPMD);
		$this->assign('total_price',$total_price);
		$this->assign('reapi',M('reapi')->where(array('is_del'=>0))->select());
		$this->assign('_list',$list);
		$this->assign('status',$status);
		return view();
	}
	public function delete_porder_excel() {
		if(M('proder_excel')->where(array('id'=>I('id')))->delete())goto Kh9eWjgx5f;
		goto Kh9ldMhx5f;
		Kh9eWjgx5f:return $this->success('删除成功');
		goto Kh9x5e;
		Kh9ldMhx5f:return $this->error('删除失败');
		Kh9x5e:
	}
	public function empty_porder_excel() {
		unset($Kh9tIMC);
		$Kh9tIMC=I('status');
		$map['status']=$Kh9tIMC;
		M('proder_excel')->where($map)->delete();
		return $this->success('清空成功');
	}
	public function push_excel() {
		set_time_limit(0);
		unset($Kh9tIMC);
		$Kh9tIMC=M('customer')->where(array('id'=>C('PORDER_EXCEL_CUSID'),'is_del'=>0))->find();
		$cus=$Kh9tIMC;
		$Kh9MC=!$cus;
		if($Kh9MC)goto Kh9eWjgx5h;
		goto Kh9ldMhx5h;
		Kh9eWjgx5h:return $this->error('未找到正确的导入用户ID,点击导入设置配置用户ID');
		goto Kh9x5g;
		Kh9ldMhx5h:Kh9x5g:unset($Kh9tIMC);
		$Kh9tIMC=M('proder_excel')->where(array('status'=>1))->field('id')->select();
		$list=$Kh9tIMC;
		$Kh9MC=!$list;
		if($Kh9MC)goto Kh9eWjgx5j;
		goto Kh9ldMhx5j;
		Kh9eWjgx5j:return $this->error('没有可推送的数据');
		goto Kh9x5i;
		Kh9ldMhx5j:Kh9x5i:M('proder_excel')->where(array('id'=>array('in',array_column($list,'id'))))->setField(array('status'=>2));
		queue('app\\queue\\job\\Work@adminPushExcel',$list);
		$Kh9vPMC='成功确认' . count($list);
		$Kh9vPMD=$Kh9vPMC . '条！请刷新待推送列表查看';
		return $this->success($Kh9vPMD,U('porder_excel',array('status'=>2)));
	}
	public function out_excel() {
		unset($Kh9tIMC);
		$Kh9tIMC=$this->create_map();
		$map=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=M('porder')->where($map)->field("*,(select type_name from dyr_product_type where id=type) as type_name")->order("create_time desc")->select();
		$ret=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=array(array('title'=>'单号','field'=>'order_number'),array('title'=>'商户单号','field'=>'out_trade_num'),array('title'=>'类型','field'=>'type_name'),array('title'=>'产品ID','field'=>'product_id'),array('title'=>'产品','field'=>'product_name'),array('title'=>'充值账号','field'=>'mobile'),array('title'=>'客户ID','field'=>'customer_id'),array('title'=>'客户端','field'=>'client'),array('title'=>'归属地','field'=>'guishu'),array('title'=>'运营商','field'=>'isp'),array('title'=>'状态','field'=>'status'),array('title'=>'总金额','field'=>'total_price'),array('title'=>'api成本','field'=>'cost'),array('title'=>'当前api','field'=>'cur_apiinfo'),array('title'=>'支付方式','field'=>'pay_way'),array('title'=>'支付时间','field'=>'pay_time'),array('title'=>'下单时间','field'=>'create_time'),array('title'=>'备注','field'=>'remark'),array('title'=>'标签','field'=>'lable'),array('title'=>'回调地址','field'=>'notify_url'),array('title'=>'回调时间','field'=>'notification_time'),array('title'=>'扩展1','field'=>'param1'),array('title'=>'扩展2','field'=>'param2'),array('title'=>'扩展3','field'=>'param3'));
		$field_arr=$Kh9tIMC;
		foreach($ret as $key=>$vo) {
			unset($Kh9tIMC);
			$Kh9tIMC=C('PORDER_STATUS')[$vo['status']];
			$ret[$key]['status']=$Kh9tIMC;
			unset($Kh9tIMC);
			$Kh9tIMC=C('PAYWAY')[$vo['pay_way']];
			$ret[$key]['pay_way']=$Kh9tIMC;
			unset($Kh9tIMC);
			$Kh9tIMC=C('CLIENT_TYPE')[$vo['client']];
			$ret[$key]['client']=$Kh9tIMC;
			unset($Kh9tIMC);
			$Kh9tIMC=time_format($vo['pay_time']);
			$ret[$key]['pay_time']=$Kh9tIMC;
			unset($Kh9tIMC);
			$Kh9tIMC=time_format($vo['create_time']);
			$ret[$key]['create_time']=$Kh9tIMC;
			unset($Kh9tIMC);
			$Kh9tIMC=time_format($vo['notification_time']);
			$ret[$key]['notification_time']=$Kh9tIMC;
			unset($Kh9tIMC);
			$Kh9tIMC=PorderModel::getCurApiInfos($vo['api_arr'],$vo['api_cur_index'],$vo['api_open']);
			$ret[$key]['cur_apiinfo']=$Kh9tIMC;
		}
		$Kh9vPMC='充值订单报表' . time();
		$this->exportToExcel($Kh9vPMC,$field_arr,$ret);
	}
	public function rihuizong() {
		$Kh9MC=(bool)I('end_time');
		if($Kh9MC)goto Kh9eWjgx5m;
		goto Kh9ldMhx5m;
		Kh9eWjgx5m:$Kh9MC=I('end_time')&&I('begin_time');
		goto Kh9x5l;
		Kh9ldMhx5m:Kh9x5l:if($Kh9MC)goto Kh9eWjgx5n;
		goto Kh9ldMhx5n;
		Kh9eWjgx5n:unset($Kh9tIMC);
		$Kh9tIMC=strtotime(date("Y-m-d",strtotime(I('begin_time'))));
		$start_time=$Kh9tIMC;
		$Kh9MC=strtotime(date("Y-m-d",strtotime(I('end_time'))))+86400;
		unset($Kh9tIMD);
		$Kh9tIMD=$Kh9MC;
		$end_time=$Kh9tIMD;
		goto Kh9x5k;
		Kh9ldMhx5n:unset($Kh9tIMC);
		$Kh9tIMC=strtotime(date("Y-m-d",strtotime("-6 day")));
		$start_time=$Kh9tIMC;
		$Kh9MC=strtotime(date("Y-m-d",time()))+86400;
		unset($Kh9tIMD);
		$Kh9tIMD=$Kh9MC;
		$end_time=$Kh9tIMD;
		Kh9x5k:unset($Kh9tIMC);
		$Kh9tIMC=array();
		$data=$Kh9tIMC;
		Kh9x5o:if(1)goto Kh9eWjgx5v;
		goto Kh9ldMhx5v;
		Kh9eWjgx5v:$Kh9vPMC=$end_time-1;
		unset($Kh9tIMD);
		$Kh9tIMD=date("Y-m-d",$Kh9vPMC);
		unset($Kh9tIMC);
		$Kh9tIMC=$Kh9tIMD;
		$arr['date']=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=date("Y-m-d",$end_time);
		$arr['date_end']=$Kh9tIMC;
		$Kh9vPvPvPvPMC=$end_time-86400;
		$Kh9vPvPvPvPMD=$end_time-1;
		unset($Kh9tIME);
		$Kh9tIME=M('porder')->where(array('status'=>array('in','2,3,4,5,6,8,9,10,11,12,13'),'create_time'=>array('between',array($Kh9vPvPvPvPMC,$Kh9vPvPvPvPMD)),'is_del'=>0,'is_apart'=>array('in',array(0,2))))->sum('total_price');
		unset($Kh9tIMC);
		$Kh9tIMC=$Kh9tIME;
		$arr['all_price']=$Kh9tIMC;
		$Kh9vPvPvPvPMC=$end_time-86400;
		$Kh9vPvPvPvPMD=$end_time-1;
		unset($Kh9tIME);
		$Kh9tIME=M('porder')->where(array('status'=>array('in','2,3,4,5,6,8,9,10,11,12,13'),'create_time'=>array('between',array($Kh9vPvPvPvPMC,$Kh9vPvPvPvPMD)),'is_del'=>0,'is_apart'=>array('in',array(0,2))))->count();
		unset($Kh9tIMC);
		$Kh9tIMC=$Kh9tIME;
		$arr['all_count']=$Kh9tIMC;
		$Kh9vPvPvPvPMC=$end_time-86400;
		$Kh9vPvPvPvPMD=$end_time-1;
		unset($Kh9tIME);
		$Kh9tIME=M('porder')->where(array('status'=>array('in','2,3,4,5,6,8,9,10,11,12,13'),'create_time'=>array('between',array($Kh9vPvPvPvPMC,$Kh9vPvPvPvPMD)),'is_del'=>0,'is_apart'=>array('in',array(0,2))))->sum("CAST(product_name as DECIMAL(10,2))");
		unset($Kh9tIMC);
		$Kh9tIMC=$Kh9tIME;
		$arr['all_amount']=$Kh9tIMC;
		$Kh9vPvPvPvPMC=$end_time-86400;
		$Kh9vPvPvPvPMD=$end_time-1;
		unset($Kh9tIME);
		$Kh9tIME=M('porder')->where(array('status'=>array('in','2,10'),'create_time'=>array('between',array($Kh9vPvPvPvPMC,$Kh9vPvPvPvPMD)),'is_del'=>0,'is_apart'=>array('in',array(0,2))))->count();
		unset($Kh9tIMC);
		$Kh9tIMC=$Kh9tIME;
		$arr['wait_count']=$Kh9tIMC;
		$Kh9vPvPvPvPMC=$end_time-86400;
		$Kh9vPvPvPvPMD=$end_time-1;
		unset($Kh9tIME);
		$Kh9tIME=M('porder')->where(array('status'=>array('in','2,10'),'create_time'=>array('between',array($Kh9vPvPvPvPMC,$Kh9vPvPvPvPMD)),'is_del'=>0,'is_apart'=>array('in',array(0,2))))->sum('total_price');
		unset($Kh9tIMC);
		$Kh9tIMC=$Kh9tIME;
		$arr['wait_price']=$Kh9tIMC;
		$Kh9vPvPvPvPMC=$end_time-86400;
		$Kh9vPvPvPvPMD=$end_time-1;
		unset($Kh9tIME);
		$Kh9tIME=M('porder')->where(array('status'=>array('in','2,10'),'create_time'=>array('between',array($Kh9vPvPvPvPMC,$Kh9vPvPvPvPMD)),'is_del'=>0,'is_apart'=>array('in',array(0,2))))->sum("CAST(product_name as DECIMAL(10,2))");
		unset($Kh9tIMC);
		$Kh9tIMC=$Kh9tIME;
		$arr['wait_amount']=$Kh9tIMC;
		$Kh9vPvPvPvPMC=$end_time-86400;
		$Kh9vPvPvPvPMD=$end_time-1;
		unset($Kh9tIME);
		$Kh9tIME=M('porder')->where(array('status'=>array('in','4'),'create_time'=>array('between',array($Kh9vPvPvPvPMC,$Kh9vPvPvPvPMD)),'is_del'=>0,'is_apart'=>array('in',array(0,2))))->count();
		unset($Kh9tIMC);
		$Kh9tIMC=$Kh9tIME;
		$arr['sus_count']=$Kh9tIMC;
		$Kh9vPvPvPvPMC=$end_time-86400;
		$Kh9vPvPvPvPMD=$end_time-1;
		unset($Kh9tIME);
		$Kh9tIME=M('porder')->where(array('status'=>array('in','4'),'create_time'=>array('between',array($Kh9vPvPvPvPMC,$Kh9vPvPvPvPMD)),'is_del'=>0,'is_apart'=>array('in',array(0,2))))->sum('total_price');
		unset($Kh9tIMC);
		$Kh9tIMC=$Kh9tIME;
		$arr['sus_price']=$Kh9tIMC;
		$Kh9vPvPvPvPMC=$end_time-86400;
		$Kh9vPvPvPvPMD=$end_time-1;
		unset($Kh9tIME);
		$Kh9tIME=M('porder')->where(array('status'=>array('in','4'),'create_time'=>array('between',array($Kh9vPvPvPvPMC,$Kh9vPvPvPvPMD)),'is_del'=>0,'is_apart'=>array('in',array(0,2))))->sum("CAST(product_name as DECIMAL(10,2))");
		unset($Kh9tIMC);
		$Kh9tIMC=$Kh9tIME;
		$arr['sus_amount']=$Kh9tIMC;
		$Kh9vPvPvPvPMC=$end_time-86400;
		$Kh9vPvPvPvPMD=$end_time-1;
		unset($Kh9tIME);
		$Kh9tIME=M('porder')->where(array('status'=>array('in','8'),'create_time'=>array('between',array($Kh9vPvPvPvPMC,$Kh9vPvPvPvPMD)),'is_del'=>0,'is_apart'=>array('in',array(0,2))))->count();
		unset($Kh9tIMC);
		$Kh9tIMC=$Kh9tIME;
		$arr['yic_count']=$Kh9tIMC;
		$Kh9vPvPvPvPMC=$end_time-86400;
		$Kh9vPvPvPvPMD=$end_time-1;
		unset($Kh9tIME);
		$Kh9tIME=M('porder')->where(array('status'=>array('in','8'),'create_time'=>array('between',array($Kh9vPvPvPvPMC,$Kh9vPvPvPvPMD)),'is_del'=>0,'is_apart'=>array('in',array(0,2))))->sum('total_price');
		unset($Kh9tIMC);
		$Kh9tIMC=$Kh9tIME;
		$arr['yic_price']=$Kh9tIMC;
		$Kh9vPvPvPvPMC=$end_time-86400;
		$Kh9vPvPvPvPMD=$end_time-1;
		unset($Kh9tIME);
		$Kh9tIME=M('porder')->where(array('status'=>array('in','8'),'create_time'=>array('between',array($Kh9vPvPvPvPMC,$Kh9vPvPvPvPMD)),'is_del'=>0,'is_apart'=>array('in',array(0,2))))->sum("CAST(product_name as DECIMAL(10,2))");
		unset($Kh9tIMC);
		$Kh9tIMC=$Kh9tIME;
		$arr['yic_amount']=$Kh9tIMC;
		$Kh9vPvPvPvPMC=$end_time-86400;
		$Kh9vPvPvPvPMD=$end_time-1;
		unset($Kh9tIME);
		$Kh9tIME=M('porder')->where(array('status'=>array('in','3'),'create_time'=>array('between',array($Kh9vPvPvPvPMC,$Kh9vPvPvPvPMD)),'is_del'=>0,'is_apart'=>array('in',array(0,2))))->count();
		unset($Kh9tIMC);
		$Kh9tIMC=$Kh9tIME;
		$arr['ing_count']=$Kh9tIMC;
		$Kh9vPvPvPvPMC=$end_time-86400;
		$Kh9vPvPvPvPMD=$end_time-1;
		unset($Kh9tIME);
		$Kh9tIME=M('porder')->where(array('status'=>array('in','3'),'create_time'=>array('between',array($Kh9vPvPvPvPMC,$Kh9vPvPvPvPMD)),'is_del'=>0,'is_apart'=>array('in',array(0,2))))->sum('total_price');
		unset($Kh9tIMC);
		$Kh9tIMC=$Kh9tIME;
		$arr['ing_price']=$Kh9tIMC;
		$Kh9vPvPvPvPMC=$end_time-86400;
		$Kh9vPvPvPvPMD=$end_time-1;
		unset($Kh9tIME);
		$Kh9tIME=M('porder')->where(array('status'=>array('in','3'),'create_time'=>array('between',array($Kh9vPvPvPvPMC,$Kh9vPvPvPvPMD)),'is_del'=>0,'is_apart'=>array('in',array(0,2))))->sum("CAST(product_name as DECIMAL(10,2))");
		unset($Kh9tIMC);
		$Kh9tIMC=$Kh9tIME;
		$arr['ing_amount']=$Kh9tIMC;
		$Kh9vPvPvPvPMC=$end_time-86400;
		$Kh9vPvPvPvPMD=$end_time-1;
		unset($Kh9tIME);
		$Kh9tIME=M('porder')->where(array('status'=>array('in','5,6'),'create_time'=>array('between',array($Kh9vPvPvPvPMC,$Kh9vPvPvPvPMD)),'is_del'=>0,'is_apart'=>array('in',array(0,2))))->count();
		unset($Kh9tIMC);
		$Kh9tIMC=$Kh9tIME;
		$arr['fail_count']=$Kh9tIMC;
		$Kh9vPvPvPvPMC=$end_time-86400;
		$Kh9vPvPvPvPMD=$end_time-1;
		unset($Kh9tIME);
		$Kh9tIME=M('porder')->where(array('status'=>array('in','5,6'),'create_time'=>array('between',array($Kh9vPvPvPvPMC,$Kh9vPvPvPvPMD)),'is_del'=>0,'is_apart'=>array('in',array(0,2))))->sum('total_price');
		unset($Kh9tIMC);
		$Kh9tIMC=$Kh9tIME;
		$arr['fail_price']=$Kh9tIMC;
		$Kh9vPvPvPvPMC=$end_time-86400;
		$Kh9vPvPvPvPMD=$end_time-1;
		unset($Kh9tIME);
		$Kh9tIME=M('porder')->where(array('status'=>array('in','5,6'),'create_time'=>array('between',array($Kh9vPvPvPvPMC,$Kh9vPvPvPvPMD)),'is_del'=>0,'is_apart'=>array('in',array(0,2))))->sum("CAST(product_name as DECIMAL(10,2))");
		unset($Kh9tIMC);
		$Kh9tIMC=$Kh9tIME;
		$arr['fail_amount']=$Kh9tIMC;
		$Kh9vPvPvPvPMC=$end_time-86400;
		$Kh9vPvPvPvPMD=$end_time-1;
		unset($Kh9tIME);
		$Kh9tIME=M('porder')->where(array('status'=>array('in','12,13'),'create_time'=>array('between',array($Kh9vPvPvPvPMC,$Kh9vPvPvPvPMD)),'is_del'=>0,'is_apart'=>array('in',array(0,2))))->count();
		unset($Kh9tIMC);
		$Kh9tIMC=$Kh9tIME;
		$arr['part_count']=$Kh9tIMC;
		$Kh9vPvPvPvPMC=$end_time-86400;
		$Kh9vPvPvPvPMD=$end_time-1;
		unset($Kh9tIME);
		$Kh9tIME=M('porder')->where(array('status'=>array('in','12,13'),'create_time'=>array('between',array($Kh9vPvPvPvPMC,$Kh9vPvPvPvPMD)),'is_del'=>0,'is_apart'=>array('in',array(0,2))))->sum('total_price');
		unset($Kh9tIMC);
		$Kh9tIMC=$Kh9tIME;
		$arr['part_price']=$Kh9tIMC;
		$Kh9vPvPvPvPMC=$end_time-86400;
		$Kh9vPvPvPvPMD=$end_time-1;
		unset($Kh9tIME);
		$Kh9tIME=M('porder')->where(array('status'=>array('in','12,13'),'create_time'=>array('between',array($Kh9vPvPvPvPMC,$Kh9vPvPvPvPMD)),'is_del'=>0,'is_apart'=>array('in',array(0,2))))->sum("CAST(product_name as DECIMAL(10,2))");
		unset($Kh9tIMC);
		$Kh9tIMC=$Kh9tIME;
		$arr['part_amount']=$Kh9tIMC;
		$Kh9vPvPvPvPMC=$end_time-86400;
		$Kh9vPvPvPvPMD=$end_time-1;
		unset($Kh9tIME);
		$Kh9tIME=M('porder')->where(array('status'=>array('in','11'),'create_time'=>array('between',array($Kh9vPvPvPvPMC,$Kh9vPvPvPvPMD)),'is_del'=>0,'is_apart'=>array('in',array(0,2))))->count();
		unset($Kh9tIMC);
		$Kh9tIMC=$Kh9tIME;
		$arr['chai_count']=$Kh9tIMC;
		$Kh9vPvPvPvPMC=$end_time-86400;
		$Kh9vPvPvPvPMD=$end_time-1;
		unset($Kh9tIME);
		$Kh9tIME=M('porder')->where(array('status'=>array('in','11'),'create_time'=>array('between',array($Kh9vPvPvPvPMC,$Kh9vPvPvPvPMD)),'is_del'=>0,'is_apart'=>array('in',array(0,2))))->sum('total_price');
		unset($Kh9tIMC);
		$Kh9tIMC=$Kh9tIME;
		$arr['chai_price']=$Kh9tIMC;
		$Kh9vPvPvPvPMC=$end_time-86400;
		$Kh9vPvPvPvPMD=$end_time-1;
		unset($Kh9tIME);
		$Kh9tIME=M('porder')->where(array('status'=>array('in','11'),'create_time'=>array('between',array($Kh9vPvPvPvPMC,$Kh9vPvPvPvPMD)),'is_del'=>0,'is_apart'=>array('in',array(0,2))))->sum("CAST(product_name as DECIMAL(10,2))");
		unset($Kh9tIMC);
		$Kh9tIMC=$Kh9tIME;
		$arr['chai_amount']=$Kh9tIMC;
		if($arr['all_count'])goto Kh9eWjgx5r;
		goto Kh9ldMhx5r;
		Kh9eWjgx5r:$Kh9vPMC=$arr['sus_count']/$arr['all_count'];
		$Kh9vPMD=$Kh9vPMC*100;
		$Kh9ME=round($Kh9vPMD,2);
		goto Kh9x5q;
		Kh9ldMhx5r:$Kh9ME=0;
		Kh9x5q:unset($Kh9tIMF);
		$Kh9tIMF=$Kh9ME;
		unset($Kh9tIMC);
		$Kh9tIMC=$Kh9tIMF;
		$arr['sus_ratio']=$Kh9tIMC;
		$Kh9vPvPvPvPMC=$end_time-86400;
		$Kh9vPvPvPvPMD=$end_time-1;
		unset($Kh9tIME);
		$Kh9tIME=M('balance_log')->where(array('style'=>Balance::STYLE_RECHARGE,'type'=>1,'create_time'=>array('between',array($Kh9vPvPvPvPMC,$Kh9vPvPvPvPMD))))->sum('money');
		unset($Kh9tIMC);
		$Kh9tIMC=$Kh9tIME;
		$arr['jiakuan']=$Kh9tIMC;
		$Kh9vPvPvPvPMC=$end_time-86400;
		$Kh9vPvPvPvPMD=$end_time-1;
		unset($Kh9tIME);
		$Kh9tIME=M('balance_log')->where(array('style'=>Balance::STYLE_RECHARGE,'type'=>2,'create_time'=>array('between',array($Kh9vPvPvPvPMC,$Kh9vPvPvPvPMD))))->sum('money');
		unset($Kh9tIMC);
		$Kh9tIMC=$Kh9tIME;
		$arr['koukuan']=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=$arr;
		$data[]=$Kh9tIMC;
		$Kh9MC=$end_time-86400;
		unset($Kh9tIMD);
		$Kh9tIMD=$Kh9MC;
		$end_time=$Kh9tIMD;
		$Kh9nWMC=$end_time;
		$Kh9MC=$start_time==$end_time;
		if($Kh9MC)goto Kh9eWjgx5t;
		goto Kh9ldMhx5t;
		Kh9eWjgx5t:goto Kh9x5p;
		goto Kh9x5s;
		Kh9ldMhx5t:Kh9x5s:goto Kh9x5o;
		goto Kh9x5u;
		Kh9ldMhx5v:Kh9x5u:Kh9x5p:$this->assign('_list',$data);
		return view();
	}
	public function complaint() {
		unset($Kh9tIMC);
		$Kh9tIMC=array();
		$map=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=I('key');
		$key=$Kh9tIMC;
		if($Kh9tIMC)goto Kh9eWjgx5x;
		goto Kh9ldMhx5x;
		Kh9eWjgx5x:$Kh9vPMC='%' . $key;
		$Kh9vPMD=$Kh9vPMC . '%';
		unset($Kh9tIME);
		$Kh9tIME=array('like',$Kh9vPMD);
		$map['c.name|c.mobile|c.issue|p.order_number|p.mobile']=$Kh9tIME;
		goto Kh9x5w;
		Kh9ldMhx5x:Kh9x5w:if(I('status'))goto Kh9eWjgx6z;
		goto Kh9ldMhx6z;
		Kh9eWjgx6z:unset($Kh9tIMC);
		$Kh9tIMC=intval(I('status'));
		$map['status']=$Kh9tIMC;
		goto Kh9x5y;
		Kh9ldMhx6z:Kh9x5y:unset($Kh9tIMC);
		$Kh9tIMC=M('porder_complaint c')->join('porder p','p.id=c.porder_id')->where($map)->order("c.id desc")->field('c.*,p.mobile as pmobile,p.order_number')->paginate(C('LIST_ROWS'));
		$list=$Kh9tIMC;
		$this->assign('_list',$list);
		return view();
	}
	public function deal_complaint() {
		unset($Kh9tIMC);
		$Kh9tIMC=I('dafu');
		$dafu=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=M('porder_complaint')->where(array('id'=>I('id')))->find();
		$com=$Kh9tIMC;
		$Kh9MC=!$com;
		if($Kh9MC)goto Kh9eWjgx62;
		goto Kh9ldMhx62;
		Kh9eWjgx62:return $this->error('未找到投诉信息');
		goto Kh9x61;
		Kh9ldMhx62:Kh9x61:$Kh9MC=!$dafu;
		if($Kh9MC)goto Kh9eWjgx64;
		goto Kh9ldMhx64;
		Kh9eWjgx64:return $this->error('请输入答复内容');
		goto Kh9x63;
		Kh9ldMhx64:Kh9x63:M('porder_complaint')->where(array('id'=>$com['id']))->setField(array('dafu'=>$dafu,'status'=>2));
		$Kh9vPvPMC='投诉处理结果:' . $dafu;
		M('porder')->where(array('id'=>$com['porder_id']))->setField(array('remark'=>$Kh9vPvPMC));
		$Kh9vPMC='投诉处理答复:' . $dafu;
		$Kh9vPMD=$Kh9vPMC . '|后台|';
		$Kh9vPME=$Kh9vPMD . $this->adminuser['nickname'];
		Createlog::porderLog($com['porder_id'],$Kh9vPME);
		$Kh9vPMC=$com['name'] . '，您好，投诉内容：';
		$Kh9vPMD=$Kh9vPMC . $com['issue'];
		Templetmsg::yewuNoc($com['customer_id'],$Kh9vPMD,'投诉管理部门',time_format(time()),'已办理',$dafu);
		return djson(0,'已通知客户');
	}
	public function lable() {
		if(request()->isPost())goto Kh9eWjgx66;
		goto Kh9ldMhx66;
		Kh9eWjgx66:unset($Kh9tIMC);
		$Kh9tIMC=I('id/a');
		$ids=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=M('porder')->where(array('id'=>array('in',$ids)))->field('id,lable')->select();
		$porders=$Kh9tIMC;
		$Kh9MC=!$porders;
		if($Kh9MC)goto Kh9eWjgx68;
		goto Kh9ldMhx68;
		Kh9eWjgx68:return $this->error('订单未找到');
		goto Kh9x67;
		Kh9ldMhx68:Kh9x67:unset($Kh9tIMC);
		$Kh9tIMC=I('lable');
		$lable=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=I('prompt_remark');
		$prompt_remark=$Kh9tIMC;
		foreach($porders as $porder) {
			if($prompt_remark)goto Kh9eWjgx6a;
			goto Kh9ldMhx6a;
			Kh9eWjgx6a:if($porder['lable'])goto Kh9eWjgx6c;
			goto Kh9ldMhx6c;
			Kh9eWjgx6c:$Kh9vPvPMC=$porder['lable'] . ',';
			$Kh9vPvPMD=$Kh9vPvPMC . $prompt_remark;
			$Kh9vPvPME=$Kh9vPvPMD;
			goto Kh9x6b;
			Kh9ldMhx6c:$Kh9vPvPME=$prompt_remark;
			Kh9x6b:M('porder')->where(array('id'=>$porder['id']))->setField(array('lable'=>$Kh9vPvPME));
			$Kh9vPMC='批量增加标签:' . $prompt_remark;
			$Kh9vPMD=$Kh9vPMC . '|后台|';
			$Kh9vPME=$Kh9vPMD . $this->adminuser['nickname'];
			Createlog::porderLog($porder['id'],$Kh9vPME);
			goto Kh9x69;
			Kh9ldMhx6a:M('porder')->where(array('id'=>$porder['id']))->setField(array('lable'=>$lable));
			$Kh9vPMC='设置标签:' . $lable;
			$Kh9vPMD=$Kh9vPMC . '|后台|';
			$Kh9vPME=$Kh9vPMD . $this->adminuser['nickname'];
			Createlog::porderLog($porder['id'],$Kh9vPME);
			Kh9x69:
		}
		return $this->success('添加成功');
		goto Kh9x65;
		Kh9ldMhx66:unset($Kh9tIMC);
		$Kh9tIMC=M('porder')->where(array('id'=>I('id')))->find();
		$info=$Kh9tIMC;
		$this->assign('info',$info);
		$this->assign('lables',explode(',',C('PORDER_LABLES')));
		return view();
		Kh9x65:
	}
	public function remarks() {
		if(request()->isPost())goto Kh9eWjgx6e;
		goto Kh9ldMhx6e;
		Kh9eWjgx6e:unset($Kh9tIMC);
		$Kh9tIMC=I('id/a');
		$ids=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=M('porder')->where(array('id'=>array('in',$ids)))->field('id,remark')->select();
		$porders=$Kh9tIMC;
		$Kh9MC=!$porders;
		if($Kh9MC)goto Kh9eWjgx6g;
		goto Kh9ldMhx6g;
		Kh9eWjgx6g:return $this->error('订单未找到');
		goto Kh9x6f;
		Kh9ldMhx6g:Kh9x6f:unset($Kh9tIMC);
		$Kh9tIMC=I('prompt_remark');
		$prompt_remark=$Kh9tIMC;
		foreach($porders as $porder) {
			M('porder')->where(array('id'=>$porder['id']))->setField(array('remark'=>$prompt_remark));
			$Kh9vPMC='批量修改备注|修改后:' . $prompt_remark;
			$Kh9vPMD=$Kh9vPMC . '|修改前：';
			$Kh9vPME=$Kh9vPMD . $porder['remark'];
			$Kh9vPMF=$Kh9vPME . '|后台|';
			$Kh9vPMG=$Kh9vPMF . $this->adminuser['nickname'];
			Createlog::porderLog($porder['id'],$Kh9vPMG);
		}
		return $this->success('修改成功');
		goto Kh9x6d;
		Kh9ldMhx6e:return $this->error('请求方式错误');
		Kh9x6d:
	}
	public function upstatus() {
		if(request()->isPost())goto Kh9eWjgx6i;
		goto Kh9ldMhx6i;
		Kh9eWjgx6i:unset($Kh9tIMC);
		$Kh9tIMC=M('porder')->where(array('id'=>I('id')))->find();
		$porder=$Kh9tIMC;
		$Kh9MC=!$porder;
		if($Kh9MC)goto Kh9eWjgx6k;
		goto Kh9ldMhx6k;
		Kh9eWjgx6k:return $this->error('订单未找到');
		goto Kh9x6j;
		Kh9ldMhx6k:Kh9x6j:unset($Kh9tIMC);
		$Kh9tIMC=C('PORDER_STATUS');
		$statusarr=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=I('status');
		$status=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=I('remark');
		$remark=$Kh9tIMC;
		$Kh9MC=!$remark;
		if($Kh9MC)goto Kh9eWjgx6m;
		goto Kh9ldMhx6m;
		Kh9eWjgx6m:return $this->error('备注必填');
		goto Kh9x6l;
		Kh9ldMhx6m:Kh9x6l:$Kh9MC=!isset($statusarr[$status]);
		if($Kh9MC)goto Kh9eWjgx6o;
		goto Kh9ldMhx6o;
		Kh9eWjgx6o:return $this->error('修改状态错误');
		goto Kh9x6n;
		Kh9ldMhx6o:Kh9x6n:unset($Kh9tIMC);
		$Kh9tIMC=M('porder')->where(array('id'=>$porder['id']))->setField(array('remark'=>$remark,'status'=>$status));
		$data=$Kh9tIMC;
		if($data)goto Kh9eWjgx6q;
		goto Kh9ldMhx6q;
		Kh9eWjgx6q:$Kh9vPMC='修改状态|原状态：' . $statusarr[$porder['status']];
		$Kh9vPMD=$Kh9vPMC . '，修改后状态：';
		$Kh9vPME=$Kh9vPMD . $statusarr[$status];
		$Kh9vPMF=$Kh9vPME . "|备注：";
		$Kh9vPMG=$Kh9vPMF . $remark;
		$Kh9vPMH=$Kh9vPMG . '|后台|';
		$Kh9vPMI=$Kh9vPMH . $this->adminuser['nickname'];
		Createlog::porderLog($porder['id'],$Kh9vPMI);
		return $this->success('修改成功');
		goto Kh9x6p;
		Kh9ldMhx6q:return $this->error('修改失败');
		Kh9x6p:goto Kh9x6h;
		Kh9ldMhx6i:unset($Kh9tIMC);
		$Kh9tIMC=M('porder')->where(array('id'=>I('id')))->find();
		$info=$Kh9tIMC;
		$this->assign('info',$info);
		return view();
		Kh9x6h:
	}
	public function mobile_blacklist() {
		unset($Kh9tIMC);
		$Kh9tIMC=array();
		$map=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=I('key');
		$key=$Kh9tIMC;
		if($Kh9tIMC)goto Kh9eWjgx6s;
		goto Kh9ldMhx6s;
		Kh9eWjgx6s:$Kh9vPMC='%' . $key;
		$Kh9vPMD=$Kh9vPMC . '%';
		unset($Kh9tIME);
		$Kh9tIME=array('like',$Kh9vPMD);
		$map['mobile']=$Kh9tIME;
		goto Kh9x6r;
		Kh9ldMhx6s:Kh9x6r:unset($Kh9tIMC);
		$Kh9tIMC=M('mobile_blacklist')->where($map)->order("id desc")->paginate(C('LIST_ROWS'));
		$list=$Kh9tIMC;
		$this->assign('_list',$list);
		return view();
	}
	public function edit_moible_blacklist() {
		if(request()->isPost())goto Kh9eWjgx6u;
		goto Kh9ldMhx6u;
		Kh9eWjgx6u:unset($Kh9tIMC);
		$Kh9tIMC=0;
		$conn=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=0;
		$fonn=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=str_replace(' ','',str_replace(array("\r\n", "\r\n", "\r\n"),",",I('mobile')));
		$batch_order_number=$Kh9tIMC;
		unset($Kh9tIMC);
		$Kh9tIMC=preg_grep('/\\S+/',explode(',',$batch_order_number));
		$bt_mo=$Kh9tIMC;
		foreach($bt_mo as $mobile) {
			unset($Kh9tIMC);
			$Kh9tIMC=$mobile;
			$arr['mobile']=$Kh9tIMC;
			unset($Kh9tIMC);
			$Kh9tIMC=I('remark');
			$arr['remark']=$Kh9tIMC;
			$Kh9MC=intval(I('limit_day'))*86400;
			$Kh9MD=$Kh9MC+time();
			unset($Kh9tIME);
			$Kh9tIME=$Kh9MD;
			$arr['limit_time']=$Kh9tIME;
			unset($Kh9tIMC);
			$Kh9tIMC=M('mobile_blacklist')->insertGetId($arr);
			$aid=$Kh9tIMC;
			if($aid)goto Kh9eWjgx6w;
			goto Kh9ldMhx6w;
			Kh9eWjgx6w:$Kh9oB212=$conn;
			$Kh9oB213=$conn+1;
			$conn=$Kh9oB213;
			goto Kh9x6v;
			Kh9ldMhx6w:$Kh9oB213=$fonn;
			$Kh9oB214=$fonn+1;
			$fonn=$Kh9oB214;
			Kh9x6v:
		}
		$Kh9vPMC='拉黑成功' . $conn;
		$Kh9vPMD=$Kh9vPMC . '条,拉黑失败';
		$Kh9vPME=$Kh9vPMD . $fonn;
		$Kh9vPMF=$Kh9vPME . '条';
		return $this->success($Kh9vPMF);
		goto Kh9x6t;
		Kh9ldMhx6u:$this->assign('heidays',array(30,90,365,3650));
		return view();
		Kh9x6t:
	}
	public function del_moible_blacklist() {
		if(M('mobile_blacklist')->where(array('id'=>I('id')))->delete())goto Kh9eWjgx6y;
		goto Kh9ldMhx6y;
		Kh9eWjgx6y:return $this->success('删除成功');
		goto Kh9x6x;
		Kh9ldMhx6y:return $this->error('删除失败');
		Kh9x6x:
	}
}
?>